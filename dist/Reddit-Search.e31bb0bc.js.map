{"version":3,"sources":["redditApi.js","../source/LocaleDataStore.js","../source/resolveLocale.js","../source/RelativeTimeFormat.js","node_modules/relative-time-format/index.js","../source/cache.js","../../source/gradation/helpers.js","../../source/gradation/canonical.js","../../source/gradation/convenient.js","../../source/gradation/index.js","../source/grade.js","../source/locale.js","../../source/style/time.js","../../source/style/twitter.js","../../source/style/default.js","../../source/style/index.js","../source/JavascriptTimeAgo.js","node_modules/javascript-time-ago/index.js","node_modules/numeral/numeral.js","node_modules/relative-time-format/locale/en/long.json","node_modules/relative-time-format/locale/en/short.json","node_modules/relative-time-format/locale/en/narrow.json","node_modules/relative-time-format/locale/en/quantify.js","node_modules/relative-time-format/locale/en/index.js","node_modules/javascript-time-ago/locale-more-styles/en/short-time.json","node_modules/javascript-time-ago/locale-more-styles/en/short-convenient.json","node_modules/javascript-time-ago/locale-more-styles/en/long-time.json","node_modules/javascript-time-ago/locale-more-styles/en/long-convenient.json","node_modules/javascript-time-ago/locale-more-styles/en/tiny.json","node_modules/javascript-time-ago/locale/en/index.js","index.js"],"names":["search","searchTerm","fetch","then","res","json","data","children","map","catch","err","console","log","defaultLocale","localesData","getDefaultLocale","setDefaultLocale","locale","getLocaleData","addLocaleData","localeData","Error","resolveLocale","options","localeMatcher","resolveLocaleLookup","RangeError","parts","split","length","pop","join","UNITS","NUMERIC_VALUES","STYLE_VALUES","RelativeTimeFormat","locales","numeric","style","indexOf","push","supportedLocalesOf","TypeError","Intl","NumberFormat","numberFormat","value","unit","getRule","replace","formatNumber","Math","abs","rule","valueIndex","type","slice","unitRules","message","current","quantifierRules","quantify","quantifier","other","number","format","String","filter","addLocale","Cache","cache","keys","key","lastKey","minute","hour","day","month","year","getStep","gradation","step","getDate","Date","factor","threshold","threshold_for_now","granularity","threshold_for_minute","grade","elapsed","now","units","convenient","getAllowedSteps","i","findGradationStep","amount","round","getThreshold","fromStep","toStep","id","undefined","JSON","stringify","chooseLocale","isLocaleDataAvailable","intlDateTimeFormatSupportedLocale","intlDateTimeFormatSupported","DateTimeFormat","isIntlAvailable","flavour","formatters","canonical","this_year","nextYear","getFullYear","getTime","JavascriptTimeAgo","concat","relativeTimeFormatCache","input","defaultStyle","twitterStyle","timeStyle","getDateAndTimeBeingFormatted","date","time","custom","getTimeIntervalMeasurementUnits","error","getNowMessage","sign","getFormatter","formatValue","flavor","get","put","_","constructor","restrictedSetOfUnits","Object","second","unshift","past","future","TimeAgo","en","searchForm","document","getElementById","searchInput","addEventListener","e","showMessage","preventDefault","reddit","results","output","forEach","post","ts","created","timeAgo","follow","subreddit_subscribers","image","preview","images","source","url","truncateText","title","author_fullname","num_comments","innerHTML","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","querySelector","remove","text","limit","shortened","substring"],"mappings":"A2BAA,ADAA,ADAA,ADAA,AIAA,ACAA,ANAA,AJAA,AEAA,ACAA,AFAA;AOCA,ADAA,ADAA,ADAA,AIAA,ACAA,ANAA,AJAA,AEAA,ADAA;AUDA,AHEA,ADAA,ADAA,ADAA,AIAA,ACAA,AXFA,AKEA,AJAA,AEAA,ADAA;AOCA,ADAA,ADAA,ADAA,AIAA,ACAA,AXFA,AKEA,AJAA,AEAA,ADAA;AUFA,AHGA,ADAA,ADAA,ADAA,AIAA,ACAA,AXFA,AKEA,AJAA,AEAA,ADAA;AOCA,ADAA,ADAA,ADAA,AIAA,ACAA,AXFA,AKEA,AJAA,AEAA,ADAA;AUHA,AHIA,ADAA,ADAA,ADAA,AIAA,ACAA,AXFA,AKEA,AJAA,AEAA,ADAA,epBNc;AOAd,ACAA,AMAA,AFAA,ACAA,AGAA,AfAA,AEAA,AOAA,AiBOA,ADAA,ADAA,ADAA,AIAA,ACAA,AXFA,ACEA,AEAA,ADAA,ApBNIA,EAAAA,MAAM,EAAE,gBAASC,UAAT,EAAoB;AMDzB,ALCP,ACDA,A4BKA,AHGA,ADAA,ADAA,ADAA,AIAA,ACAA,AXFA,ACEA,AEAA,ADAA,ApBNK,IMFQyE,MAAM,CNEPxE,EMFU,EAAf,CNEU,CMFQ,8CNEgCD,UAAxC,yBAAL,CACLE,IADK,CACA,UAAAC,GAAG;AODf,ACAA,AIAA,ACDA,AGCA,AfFA,AAEA,AEKA,AwBEA,ADAA,ADAA,ADAA,AIAA,ACAA,AXFA,ACEA,AEAA,ADAA,ApBNe,ICDXS,SDCeT,EcAnB,CdAsB,CCDL,ADCMC,GCDH,CDCD,EAAJ,CCDf,EAEA;AMDA,ACAA,AMCC2E,AFDD,AXFA,AAIA,ACDA,AyBMA,ADAA,ADAA,ADAA,AKAA,AXFA,ACEA,AEAA,ADAA,ApBPe,EcCdA,GdFW,EAEL7E,IcAG,AdFE,CAEA,CcAA0F,SdAAvF,IAAI,QcDhB;APCA,ACAA,AFFO,AQGN0G,AFDD,AIDA,AfDA,A0BSA,ADAA,ADAA,ADAA,AKAA,AXFA,ACEA,AEAA,ADAA,ApBPgB,EcCfA,ERHYrC,ALAT9D,IKAa,CQGT,ERHY,AQGV,CAAC,CdDSP,GMFKoE,CLAR,ADEO,CAACpE,ECFL,EKAb,ANEa,CAAUC,CMFE,ALAhC,EAEA,GaCU,EAAoB,AdDV,CAAmBC,GAAnB,CAAuB,CcCjC,CAFV,QdC2CF,IAAI;AOC/C,ACAA,AMCCsF,AFDD,AXAA,AACA,A6BFA,AHQA,ADAA,ADAA,ADAA,AKAA,AXFA,AdVA,AeYA,AEAA,ADAA,ApBR+C,EcE9CA,EbAK9E,GaAA,EACL,CACC,KADD,AbDgB,ADDPR,EcIR,CbHkB,CDDN,CCCd,ADDeA,IADgC,CcG9C,EAGC,MAHD,EAIC,KAJD,EAKC,MALD,EAMC,OAND,EAOC,MAPD;APDD,ACAA,AMHA,AFGA,AIFA,AcGA,AHMA,ADAA,ADAA,AIAA,AXFA,ACEA,AEAA,ADAA,ApBT+C,OAA3B,CAAJ;AOGhB,ACAA,AFHO,AMGP,AXDA,AAEO,A6BAP6I,AHMA,ADAA,ADAA,AIAA,AXFA,ACEA,AEAA,ADAA,ApBVgB,IMAHvE,ALEP9D,CDJM,EMEI,ANETL,ECESS,CKJG,ENFP,CAIC,EMFWyD,ALEP,GAAG,CKFb,CLEP,CKF6B,CLItB,CAAuB1D,ADFjBP,GAAG,C8BER0D,E7BAD,EAA+B,K6BAtC,CAAkBgF,WAAlB;AvBAA,ACAA,AFFA,AMEA,AIHA,AfIC,A0BMD,ADAA,ADAA,AIAA,AXFA,ACEA,AEAA,ADAA,ApBTgB,SCGRtI,IDHYH,OCGD,ADHQ,CCGPM,ADHQL,GAAR,CAAYF,ECGb,CAAlB,ADHmB,CAAJ;AOGhB,ACAA,AIAA,AXDO,AAEN,A6BAD,AHMA,ADAA,ADAA,AIAA,AXFA,ACEA,AEAA,ADAA,ApBVgB,I8BIV2I,C9BRM,CAAP,GCMWtI,K6BEA,GAAGuI,Q7BFZ,A6BEoB,CAACC,E7BFO,Y6BEhB,CAAwB,aAAxB,CAAnB;AvBAA,ACAA,AIAA,AIHA,AfEE,A6BEF,AHMA,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,ApBVK,I8BICC,K7BFG3I,M6BEQ,GAAGyI,I7BFlB,I6BE0B,CAACC,cAAT,CAAwB,cAAxB,CAApB;AvBAA,ACAA,AFJO,AMIP,AXDC,AAEM,A6BCPF,AHKA,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,ApBlBc,IMODxE,KAAK,ALKF1D,C6BCN,CAACsI,CxBNU,QAAQ7E,ELKtB,CKLA,ALKuBxD,EKLG,EwBMjC,CAA4B,K7BDrB,EAAmC,C6BC1C,EAAsC,UAAAsI,CAAC,EAAG;AvBD1C,ACAA,AFHA,AMGA,AXCC,A6BCG,AHKJ,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,MnBNK,CAACtI,UAAL,EAAiB;AMAlB,ACAA,AIAA,AXDO,AAEL,A6BCE,AHKJ,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,MULUnB,G7BHMe,CAER,IAAIK,E6BCQ,G7BDZ,A6BCemI,C7BDL,KAFX,CAA0BvI,I6BGC,CAAC6B,C7BH5B,EAAkC,E6BGrC,CAFsC,CAGtC,4B7BFI,CAAN;AMAF,ACAA,AIAA,AXF0C,AACxCjC,A6BIE,AHIJ,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,EnBREA,AUbF,CVY0C,CAIzC,WAHc,GAAGI,MAAhBJ;AMEF,ACAA,AFLO,AMKP,AXEC,AUhBD,ATee,A4BEX,AHIJ,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,EnBNA,EKNaiE,IAAI,CJMOxD,EINH,SAAS,EJMf,CINM,AJMiBL,GIND2D,GAA9B,AJMQ,EIN0B,AJMmB;AKA5D,ACAA,AIAA,AXCA,ASfA,ACAA,ATc4D,AyBO5D,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,MlBP8CrD,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AKC5D,ACAA,AFLA,ASPA,AHYA,AXCA,AUfA,ATcE,A4BEE,AbnBJ,AUwBA,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,MlBPQC,A4BEDvB,UAAU,G5BFI,E4BEC,C5BFEsB,C4BEpB,EAAqB,I5BFM,CAACC,aAARD,IAAyB,QAA/C;AKCF,ACAA,AIAA,AXACT,AUdD,AmBgBQ6I,AHKR,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,EnBPC7I,E6BEO6I,S7BFI,CAACvI,C6BEM,CAAC,Q7BFG,CAACH,MAAZ,CAAXH,GAAiCM,O6BEf,CAAX,E7BFPN;AMCD,ACAA,AObA,AHaA,AXAC,AUdD,ATaE,A4BGG,AbnBL,AUwBA,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,UlBRUU,aAAR;AKEF,ACAA,AIAA,AXAO,AUdP,ATaI,AyBQJ,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,SnBPgBN,ACDP,QAAL,KDCG,CAAuBD,MAAvB,EAA+B;AMCtC,ACAA,AOdA,AHcA,AXAE,AUdF,ATaM,A4BEFyI,AHMJ,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,EUNIA,CAAC,CAACE,K7BDG9I,ICDIW,K4BET,E7BDgB,CAACR,A6BRqB,CAW1C,K7BHoB,CAAlB,ICD8B,CAACA,MAAD,CAA1B;AKEN,ACAA,AIAA,AXAC,AUdD,ATaI,AyBQJ,ADAA,ADAA,APFA,ACEA,AEAA,ADAA;AbNA,ACAA,AIAA,ADdA,ATaI,A4BGJuI,AHKA,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,EULAA,WAAW,CAAC1G,KAAZ,GAAkB,EAAlB,CAZ0C,CAc1C;AvBHA,ACAA,AIAA,AXAO,AUdP,AgBqBA,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,SnBPgB3B,aAAT,CAAuBC,UAAvB,EAAmC;AMC1C,ANAE,AUdF,ATYI,A4BKJyI,AHIA,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,MnBPM,CAACzI,ECFE,MMGT,AIAA,CJCC,CPFC,EAAiB,ACFf,E4BKGpB,MAAP,CAAcC,UAAd,EACCE,IADD,CACM,UAAA2J,OAAO,EAAI;AvBHjB,ACEE1E,AFVK,AMSNJ,AXDG,AUdJ,ATYM,A4BMFrE,AHGJ,ADAA,ADAA,APFA,ACEA,AEAA,ADAA,EZLEyE,AIDDJ,EkBGGrE,ItBFI,CFVQoE,CEUN,APFA,COCT,AIAS,AkBGC,CAACnE,ClBHAiF,CXDExE,C6BIV,CxBZG,AwBYSyI,CxBZQ9E,ELQd,CAAU,G6BIhB,GxBZG,EAA4BjC,IAA5B,EAAkC,AMQzC,SXAU,CAAN;AMCJ,ACEEA,AFVD,AMSAiE,AXJyC,ACCpC,A4BMF,AHGJ,AFAA,APFA,ACEA,AEAA,ADAA,EZLEjE,AIDDiE,CXJyC,CAIxC,EOCI,CFVL,CEUO,AsBEA+C,ClBHA,ENTP,AMSS,EVHGtI,C4BMC,GAAG,GxBZhB,EMOD,CNPoBuD,SAAnB,AJM+B,CAAC/D,CINhC,KJM+B,A4BM5B,C5BNE,EINL,GAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,SAAA,GAAA,QAAA,GAAA,SAAA,GAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,IAA8B;ACS/B,ACDC,AFR8B,AMU9B2E,AXAC,A6BGEkE,AHGJ,AFAA,APFA,ACEA,AEAA,ADAA,CZTA,CIGClE,CJEA,CsBCGkE,GlBHE,CNVyB,CMW9B,CACC,CkBCS,CxBboB,AwBanBE,GlBFX,EAEC,EkBAE,CAAgB,KlBFnB,EAGC,GkBDkBC,GlBFnB,CkBEuB,ClBEtB,CkBF0B,IlBF3B,EAKC,MALD,EAMC,OAND,EAOC,MAPD;ALDD,ACGE5E,AINF,ADbe,ATaX,A4BOI,AHGR,AFAA,APFA,ACEA,AEAA,ADAA,EZJEA,OGnBsBqB,CmBoBVwD,CtBDH,CsBCK,CtBDH,CADZ,CsBEkB,IAAI/E,EnBpBR,CAAsB/C,CmBoBlB,CAAS6H,IAAI,CnBpBjB,AmBoBkBE,EnBpBaxD,KmBoB3B,CAAX,enBpBO,EACf;AHmBErB,AFd6B,AKJ9B,ATYK,A4BOE,AHGR,AFAA,APFA,ACEA,AEAA,ADAA,EZJEA,MFd6B,EwBejB8E,E5BPF,GKIZ,CACC,ADb8B,AJQf1I,C4BOK,CxBfU,CEcZ,CsBCK,CtBDH,EAFpB,CsBG2ByH,E5BPhB,CAAA,uB4BOY,CAAY,OAAZ,CAAhB,K5BPI,MAAA,CAAkD3H,aAAlD,CAAA,CAAN;AKMJ4D,ACCAA,AFf6B,ALW7BtE,AUdD,ATEC,A4BiBM,AHGR,AFAA,APFA,ACEA,AEAA,ADAA,EbLEsE,ACCAA,APJAtE,MMGM,ACCA,EDDE,ACCA,AFfqB,AwBgBjBiH,CvBHb,ACDA,CFZ8B,CLWlB,CAAC3G,A6BKI,ExBhBa,CwBgBVgJ,O7BLG,A6BKI,CxBhBG,ALWNnJ,A6BKIgD,CxBhBE,KLWlB,A6BKQ,CxBhBU,ALW7BnD,A6BKkCqE,ExBhBL,CLWI/D,C6BKK,CAACuE,GAAL,K7BLlC7E,A6BK+CoJ,EAA5B,CAAb;AvBDNnH,ACCAA,AFhB6B,ALY9B,AUdA,ATYA,A4BOO,AHGR,AFAA,APFA,ACEA,AEAA,ADAA,EbLEA,ACCAA,IDDI,ACCA,AFhByB,ECevB,ACCA,EFhBuB,AwBiBjBsH,GxBjBiB,GwBiBX,GAAG,GxBjBQ,CAAA,EAAA,EAAA,CAAA,awBiBAJ,IAAI,CAACK,qBAAb,EAAoCrG,MAApC,CAA2C,IAA3C,CAAf;AvBJP,ACDA,AFZ8B,AKD9B,ATaD,A4BMQ,AHGR,AFAA,APFA,ACEA,AEAA,ADAA,CbTA,ACLA,EDUC,ACCA,EFlB8B,EKD9B,GmBmBasG,CxBlBiB,AKD9B,ImBmBkB,GAAGN,EnBnBrB,EmBmByB,CnBnBN7H,AmBmBOoI,OnBnB1B,AmBmBqB,EnBnBrB,CmBmBoCP,IAAI,CAACO,EnBnBzC,GAAA,EmBmBoC,CAAaC,EnBnBjD,CAAA,GmBmBoC,CAAoB,CAApB,EnBnBpC,AmBmB2DC,CnBnB3D,KmBmBoC,CAA8BC,GnBnBlE,AmBmBqB,CnBnBrB,EAAA,AmBmBwE,EnBnBxE,GAAA,CAAA,EAAA,SAAA,GAAA,QAAA,GAAA,SAAA,GAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,IAA4B,EmBmBrB;AvBANtF,ACCAA,AFnB6B,AKDF,AmBoBrB0E,AHGR,AFAA,APFA,ACEA,AEAA,ADAA,EbJE1E,ACCAA,IFnB6B,AwBmBvB0E,ExBnBuB,AKDF,GJmBlB,ACCA,AFnBoB,CKDF,AmBoBf,CvBDD,ACCA,EADZ,CDDA,IDjB8B,CAAA,IAAA,EAAA,qFwBsBXQ,KAHN,0HAK+BK,YAAY,CAACX,IAAI,CAACY,KAAN,EAAa,EAAb,CAL3C,qEAMoC9C,IANpC,iCAM6DkC,IAAI,CAACa,eANlE,8HAQ0Cb,IAAI,CAACc,YAR/C,2FAS0CV,MAT1C,mPAAN;AvBANjF,ACCAA,AFpB6B,AwBsC1B,AHfL,AFAA,APFA,ACEA,AEAA,ADAA,EbJEA,ACCAA,GsBPE,GvBMI,ACCA,EDDE,ACCA,AFpBqB,CCiB9B,CCCA,AFlB8B,CAAA,IAAA,EAAA;ACoB7BrC,ACCAA,AFrB6B,AKDF,AmBwCzBgH,AHfJ,AFAA,APFA,ACEA,AEAA,ADAA,EbJEhH,ACCAA,EsBkBEgH,EvBnBE,ACCA,AFrByB,ECoBvB,ACCA,AGtBqB,ELCE,AwBuCrB,GxBvCqB,CwBuCjB,CxBvCiB,CAAA,AKDF,EAAA,GLCE,CwBuC3B;AvBtBH,ACCA,AFlB8B,AIIhB,ACLc,AmByCzBT,AHfJ,AFAA,APFA,ACEA,AEAA,ADAA,CbbA,ACLA,EDeC,ACCA,CsBiBGA,KpBpCoB7D,CCLK,EAAA,AmByCjB,CAAC8D,CpBpCE,CAAe7D,CCLD,MDKd,EAAwBC,CCLV,CAAA,CDKd,AoBoCX,CAAwB,CpBpCgBC,GCLf,EDKd,ACLc,EDM7B,CoBmCI,EAAmCoF,SAAnC,GAA+CjB,MAA/C;AvBjBF1E,ACCAA,AKxCF,AHqBA,ACN6B,AmB0C5B,AHfD,AFAA,APFA,ACEA,AEAA,ADAA,EbHEA,ACCAA,CsBfF,GpBLmDL,ACLtB,IAAA,CJwBlB,ACCA,EDDE,ACCA,AGzBgB,EDM7B,EHiBC,CGjBD,CFmBmB,EADlB,CGxB4B,CAAA,EAAA,EDM7B,ACN6B,CDM7B,ACN6B,MDM7B,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAD+Da,qBAC/D,CAAA,CACC;AHkBCT,ACCAA,AFzB6B,AOf/B,AHsBC,ACR4B,AmB4C5B,AHhBD,AFAA,APFA,ACEA,AEAA,ADAA,CUjCA,CvB8BEA,ACCAA,EsBoBF,CnB9C6B,GJyBrB,ACCA,AFzBIH,ECwBF,ACCA,CG1BmB,CJuB5B,ACCA,AFvB8B,GAAA,IAAA;ACyB7BlC,ACCAwC,AKxCF,AFa6B,AgB6B7B,AFAA,APFA,ACEA,AEAA,ADAA,EbHExC,ACCAwC,EKxCI0B,ENuCA,AI1BuB,EJ0BrB,AI1BqB,GAAA,EH2BhB,CKxCG,CLwCD,CAHd,CKrCkB,EAAnB,CFa6B,CEX7B,AFW6B,IAAA,EAAA;AJuB5B,ACKClE,AF1BA,AOZF,AHmBCiC,ACT4B,AmB+C7B,AHjBA,AFAA,APFA,ACEA,AEAA,ADAA,CbjBA,CCeEjC,AEnBDiC,CHmBA,GCAK,EAAE,AF1BFC,CwB6CG0E,CnB/CoB,CDSnB,CJPA,AKFmB,CLElB5G,AKFkB,CDShB+C,GJPPb,AKFuB,EAAA,CmB+C7B,CAAqBvB,CxB7CDX,IAAlB,EAAwB,AwB6C1B,CpBtC4B,CAACiC,AoBsCCiG,SpBtCF,AoBsC5B,EpBtCwCrF,AoBsCA,KpBtCZ,CAA3BZ,CAHD,CAKC;AHkBCK,ACLD,AFrBE,AOZH,AHqBC,ACZ4B,AmBgD7B,AHjBA,AFAA,APFA,ACEA,AEAA,ADAA,CZvBA,CDqBEA,CCCD,GG9B4B,AmBgDvB6F,GAAG,CnBhDoB,CJ6BlB,CuBmBC5B,CvBnBC,AD1BHrE,AKHmB,EAAA,CAAA,CLG1B,GC0BiB,AuBmBA,CnBhDS,AmBgDRkG,CvBpBpB,YuBoBW,CAAuB,KAAvB,CAAZ;AvBlBE/F,ACCAC,AF3BC,AOZH,AVDA,AQS6B,AmBiD7B6F,AHjBA,AFAA,APFA,ACEA,AEAA,ADAA,EbFE9F,ACCAC,AsBkBF6F,GAAG,CAACD,EvBnBI,EAAE,CCCC,EAAE,EDDE,AuBmBf,EvBrBC,GCGmB,EADnB,csBoBOA,SADR;AvBlBElI,ACCAqC,AF3BA,AHbK,AOqBN,AoBuCD8F,AHnBA,AFAA,APFA,ACEA,AEAA,ADAA,EbFEnI,ACCAqC,AsBoBF8F,E3B5DalJ,C2B4DV,CvBrBG,AGlBDgD,AoBuCDoG,EvBrBI,ACCA,CLxCU,CKwCR,ELxCW,CACnB,EKuCa,AEnBD,CAACvJ,CFiBd,AsBsBD,CAAgByH,G3B5DK,COqBhBtE,CPnBH,G2B0DsB,CpBvCE,AoBuCDqG,CpBvCxB,EAA4B,CPrBR,EAGnB,MAHmB,EAInB,A2BwDc,CAAwB3H,I3B5DnB,EAKnB,C2BuDc,CAAhB,I3B5DqB,EAMnB,OANmB,EAOnB,SAPmB,EAQnB,MARmB,CAAd,EAWP;AIyBC,ACKCX,AF3BD,AIQC,ACd2B,AmBsD7B,AHpBA,AFAA,APFA,ACEA,AEAA,ADAA,CbrBA,CCoBEA,CDAD,GCAK,AsBqBAuI,EtBrBE,AGjCErK,MAAmB,CEN7B,EFM6B,IAAA,AmBsDR,GAAGqI,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAxB;AvBpBElE,ACJD,AFtBD,AObC,AHWD,AoBkDA,AHrBA,AFAA,APFA,ACEA,AEAA,ADAA,CZ3BA,CD0BEA,CCCD,AE7BD,CAWC,EoBuCKrF,KvBtBK,CuBsBC,CvBtBC,EuBsBEsJ,KvBtBK,EAAP,CuBsBU,CAACC,CvBtBC,EADxB,WuBuBc,CAAwB,QAAxB,CAAf;AvBrBEnE,ACCAC,AKxCD,AVQD,AQHE,AmByDFiG,AHtBA,AFAA,APFA,ACEA,AEAA,ADAA,EbDElG,ACCAC,AsBsBFiG,E3BtDMrJ,II+BE,AIlCF0E,EJkCI/B,CCCC,EAAE,IsBsBE,C3BtDK,A2BsDJ2G,EtBtBI,CLhCG,CI6BtB,ACEA,AL9BC,MADqB,CQHI,CRKzB,AQL0BtK,AmByD5B,CAA6BiK,GAA7B,EnBzD2B,AmByDOlL,CnBzDhC,CRGqB,CAAvB,AQHqC,ERQrC,C2BiDA;AvBtBE+C,ACCAyC,AKxCDR,AFKE,AmB0DHwG,AHvBA,AFAA,APFA,ACEA,AEAA,ADAA,EbDEzI,ACCAyC,AKxCDR,AiB+DDwG,IvBxBM,EAAE,GMvCE,CiB+DA,CjB/DE,AFKFvK,AmB0DC,CjB9DT,KFIC,GHmCmB,EAAE,OAAO,EAF9B;ADFA,ACKCmE,AKzCU,AVaZ,AOQC,ACfE,ATwBI,A4BiCI,AHtBX,AFAA,APFA,ACEA,AEAA,ADAA,CbzBA,CCyBEA,AKzCU,CNyCX,CJ5BKlD,EOQC6D,CAAC,CFoBA,CNXQtE,CMWN,AEpBCuE,CoB0CMsD,ItBtBF,AKzCH,CAAA,AVaM,CKyBjB,CKtCW,CVaS,A2BkDI,CjB5DnBvE,AVWJ,A2BiDwB0G,M3BlDL,COQO,CPN1B,AOM2B/F,ARStB,CAA6BzE,I4BiCnB,CAAuB,C3BlDnB,AOQO,ARSrB,ECdL,AOKoC0E,ARSM,GQThB,EAAeX,AoB0C1B,EjB5DHkC,AiB4DoCwE,C3BlD7B,CAArB,I2BkDiB,CpB1CW,CAA3B,AoB0CU,YjB5DL3G,EAAmB,QAAnBA,CAHM,EAAA;AN0CVM,ACAAtC,AKtCCsC,AGPH,AbsBA,AElCA,AKqCC,ARSC,A4BgCS,AHrBX,AFAA,APFA,ACEA,AEAA,ADAA,EbAEA,ACAAtC,CsBqBQ,CjB3DPsC,CiB2DyD,CtBrBtD,AEpBCJ,ARSD/D,EMWE,CsBqBE,CpBzCC,AoByCX,CvBrBW,EAAE,AMtCD,AHkBE8D,EGlBA,INsCKJ,GGpBI,CAACmB,CAAD,CAAtB,CAbD,CAeC,IHiBA,WLVmB9E,MAAdC,CAAJ,EAA2B;AKY3BkE,ACLD,AKtCW,AGFZ,AN2BC,AClBC,ATyBE,A4BiCH,AHtBD,AFAA,APFA,ACEA,AEAA,ADAA,CZhCA,CDgCEA,CCCD,AK5CW,CAAA,EAMV,ENqCM,AIpCAzD,EJoCE,CLXCV,ESzBE,CJoCC2D,EIpCE3D,CTyBZ,KSzBkB,CAACW,GJkCtB,EIlCeX,CAAa,GAAbA,CAAd;AJqCA8B,ACCAsC,AKtCAN,AGRF,AN2BC,ARI2C,AyBc5C,AFAA,APFA,ACEA,AEAA,ADAA,EbAEhC,ACCAsC,CNf0C,CAI1C,EKUI,EAAE,GCCG,EAAG,OAAO,EAAP,GAAaT,CKtCjBsC,WLqCT,SKrCCnC,EAAmB,MAAnBA,CAPU,EAQV;ANiCD,ACKCK,AF9BK,AGGP,AIVE,AGTF,ALQE,AmB4DF,AHvBA,AFAA,APFA,ACEA,AEAA,ADAA,Cb7BA,CC8BEA,CDAD,KCAO,CF9BQF,AwBoDP0F,CtBtBChG,CGtCDjD,KLQF,AKRO,CLQUmB,AKRTjB,ImB4Df,CtBxBC,AF5BM,AwBoDe8J,CnB5DbhK,CLQsB,EKRP,AmB4DxB,CnB5DE,CmB4D0BiK,CnB5DD,ImB4D3B,EAAmC;AvBrBjCvG,ACAAtC,AF9BD,AOPC,AGTF,AN0BC,AClBEpB,AmB4DC,AHvBJ,AFAA,APFA,ACEA,AEAA,ADAA,EbCE0D,ACAAtC,IAAI,AEpBDgD,AClBFpE,AmB4DOkK,CpB1CJ,CFoBE,CF9BA/I,EC8BG,AItCH,CDkBG,AClBFhB,CJsCI,AGpBD,CJVC,AIUZ,CClBEH,AmB4DgB,CpB1CJ,EoB0COgK,CvBtBH,CAAN,EuBsBa,CvBtBH/G,AuBsBIrC,GxBpDF4C,IAAjBrC,AwBoDc,CAAa,ExBpDHA,CwBoDV,CvBvBrB,CuBuBuC8I,ExBpDhC9I,GAAgC,AwBoDlB,CAAlB,GxBpDwCqC,IAAJ,CAASrC,KAAT,CAAvC;AC+BCsC,ACJD,AF1BA,AGED,AITGC,AGTH,AN0BE,AClBCpE,ATyBD,A4BmCE,AHvBJ,AFAA,APFA,ACEA,AEAA,ADAA,CZpCA,CDqCEmE,CCCD,CKtCEC,EFDApE,ATyBKU,A4BmCDkK,EvBtBC,EAAEhH,CLbG,CSzBJ,CECG,CXwBI5D,CWxBF2D,AFDFjD,AmB4DI,KnB5DC,ATyBK,A4BmCD,CnB5DHI,ATyBKH,A4BmCD,CAAlB,EvBxBH,AuBwBwB,CnB5DbD,CAAW,ATyBPV,CAAa,ESzBjBU,CAATV,ATyBaA,CAAd,A4BmC8B0K,CjB3DZ,GiB2DK,GjB3DChH,eADxB;ANuCA5B,ACCAsC,AKtCCpB,AGTH,ANMA,AoB8DI,AHvBJ,AFAA,APFA,ACEA,AEAA,ADAA,EbCElB,ACCAsC,CEzCF,CGGGpB,AVYkB9B,AOOpB,EHkBK,EAAE,CuBsBGwJ,CjB7DT,CLwCS,CKxCT,CLwCW,AsBqBE,CAACG,KtBrBGlH,EKxCjB,EiB6DS,CAAe,CAAf,EjB7DT,AiB6D2BiH,CjB3DnB/I,GLqCT,EKvCC,EAEe7B,CiB2DN,CAAP,IjB7DF,EAEuB;ANkCxB,ACKCmE,AC9BF,AIRI,AGRJ,AN2BC,ACrBE,ATyBD,A4BoCD,AHvBD,AFAA,APFA,ACEA,CZjCA,CCmCEA,CDAD,KCAO,CNfCnE,CMeC,AGxCH0F,IHwCO/B,CNfC,CAAC/C,MAAPZ,GAAgB,CMaxB,ANbC,EAA0B,GSzBA,CAACA,MAAD,CAAzB,EAAmC;AJyCpCoE,ACAAtC,AKtCE,AGRJ,AN2BC,ACrBG,ATyBApB,AyBaJ,AFAA,APFA,ACEA,EZEE0D,ACAAtC,EQ9CIf,Ad+BFL,EMeE,EAAE,CQ9CG,Ad+BF,CAACG,CKeC,CS9CG,CT8CD,AS7CZ,Ad8BGH,ESzBOV,GKNG,ET8CM4D,AS5CnB,CLIG,aJuCH;AAECO,ACJD,AKlCG,AGNH,AboBC,AOKD,ACrBG,ATyBAnE,AyBaJ,AFAA,APFA,ACEA,CXxCA,CD0CEmE,CCCD,CH9DoBf,AH8CjBpD,IKeI,AS/CM,ET+CJ6D,AS3CT,Ad4BS,GAAGnD,KchCC,AdgCI,CAACI,Cc3BlB,GTwCA,ALbYJ,CAAW,EchCV,CdgCDA,Cc1BZ,Ad0BGV,KchCU,EAOb,MAPa,EAQb,OARa,EASb,SATa,EAUb,MAVa,CAAd;ATgDE8B,ACCAsC,AKvCE,AFFD,AgBsCH,AFAA,APFA,ACEA,EZEEtC,ACCAsC,IDDI,EAAE,GCCG,EAAE,MAAM,CAAN,GAAUT,YADtB;ADHA,ACKCQ,AGzCA,ATwBE,AyBcJ,ATFA,ACEA,CZrCA,CCwCEA,EQrCmBmC,IRqCb,ANjBArG,EMiBE2D,cAFT,oBNfqB5D,MAAdC,CAAJ,EAA2B;AMkB7B6B,AKxCE,AHkBH,ARKK,AyBcN,ATFA,ACEA,EXGEA,IAAI,AEtBDkC,EFsBG,EEtBC,CAACM,ERKGtE,MAAP,GQLL,EAAsB;AFmBtB,AKpCG,AHkBF,ACnBD,ATwBI,AyBcL,ATFA,ACEA,CX5CA,EAgDC,KG1CM,EECC,CAAC4F,CFDExF,KAAJ,CAAA,mCECH,EAAoC,yBFDjC,MAAA,CAAwEe,OAAO,CAACL,IAARK,CAAa,IAAbA,CAAxE,CAAA,CAAN;AH2CCiD,AKzCG,AGEJ,ANgBC,ACnBD,ATwBE,AyBcH,ATFA,ACEA,EXIEA,MEvBMY,GFuBG,EAAE,CEvBC,GAAG9C,GFuBG0B,CEvBC,CAACqB,KAAL/C,CAAYuC,MFsB5B,CEtBmC,GAAGT,IAAI,CAACG,MAAfM,GAAyBT,IAAI,CAACM,WAA1CpC,IAAyD8B,IAAI,CAACM,WAA7E,CAFqB,CAGrB;AFuBAH,AKzCG,AHmBH,ACnBF,ATuBC,AyBcD,ATFA,ACEA,EXIEA,MAAM,EAAEN,aAFT,YHlEQ;AGqEP/B,AKzCE,AVeF,AOIA,AiBkBF,ATFA,ACEA,EXIEA,IAAI,EAAE,GL1BN,kBAAA,GAAwC;AKuBzC,AQnCA,AbYyC,AOKxC,AiBkBF,ATFA,ACEA,CXhDA,OLyBcX,GaZb,IbYyC,GAAA,SAAA,CaZzC,AbYyC,GaXzC,GbWyC,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAlB,EAAkB;AaXzC,AbWyC,AwBwB1C,ATFA,ACEA,QHpCaA,AbYeb,OaX3B,AbWyC,GaXzC,AbWyC,SaXzC,AbWyC,CaXzC,AbWyC,MaXzC,AbWyC,GaXzC,AbWyC,CaXzC,AbWyC,IaXzC,AbWyC,SaXzC,AbWyC,CaXzC,AbWyC,CaXzC,AbWyC,CaXzC,AbWyC,KaXzC,AbWyC,SaXzC,AbWyC,GaXzC,AbWyC,SaXzC,AbWyC,CaXzC,AbWyC,CaXzC,AbWyC,CaXzC,AbWyC,GaZnB,AbYe,EaXrC,AbWyC;AUdtC,AHoBF,AiBmBF,ATFA,ACEA,QTnBM0E,EGpBE,CAACgB,GHoBG,KAAK,CAAXhB,CGpBa,CAAChF,EHoBE8E,CAAC,GGpBJ,AHoBO,CGpBtB,AHoBF,EGpB2B,AHoBA;AGnBxBkB,AGEJ,AbWyC,AOOvC,AiBmBH,ATFA,ACEA,IHrCC,AbWyC,IUbrCA,KHoBKjC,KGpBK,CAAC/D,AGEf,AbWyC,CaXzC,AbWyC,EOOvB,CAAC8E,CMlBnB,AbWyC,AOOrB,CGpBN,CAAVkB,AGEJ,AbWyC,AEzC5B,CKgDU,CAAL,CGpBO,AHoBvB,EGpBEA,YGEJ,CAAA,AbWyC,CaXzC,AbWyC,CaVxC;AHFG,AR5BH,AKgDC,AiBmBH,ATFA,ACEA,UdnEM3C,KAAK,GAAG,KAAKA,KAAjB;AQ6BE,AVWsC,AOSxC,AiBmBF,ATFA,ACEA,IhB5B0C,eAAA,CAAA,IAAA,EAAA,SAAA,EAX9B,QAW8B,CAAA;AaTxC,AXhCY,AM+BP,AgBuCP,ATFA,ACEA,QHtCM,CLDUsC,EN/BF,IWgCDxE,AXhCC,IAAA,GWgCR,AXhCQ,KWgCW,IXhCX,CAAA,GWgCZ,EAAiC,CXhCrB,EAANmC,EM+BD,CAA2CnC,CN/BpC,GAAA,GM+BP,CN/BO,CM+B6C,IN/B7C,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AWiCXA,AbQuC,AEzClCmC,AKoDP,ACpBA,AgBuCD,ATFA,ACEA,IhB9B0C,EaRvCnC,EXjCKmC,CKoDAU,GLpDM,CWiCJ,AXjCI,AKoDb,GMnBY,CAAC7C,AXjCA,CAANmC,CFyCkC,CAAA,CEzC5B,GWiCD,AbQ6B,CaRvCnC,CbQuC,IEzC5B,CAAA,EFyC4B,EAVhC,AE/BI,CAANmC,KFyCkC,CAAA;AUVtC,AGDH,AX9Ba,AKqDb,ACpBA,AgBuCD,ATFA,ACEA,KH1CC,CAMC,ALHGsC,IEFG,CAACI,UAAU,CAAChG,MAAD,CAAVgG,CAAmBE,GFEI,EAA/B,EAAmC,EEFhC,EAAmC;AAClC,AGKH,AbIwC,AOc1C,ACrBE,AgBuCF,ATFA,ACEA,IhBhC0C,OQPjCxE,IAAI,CAACmE,GRO4B,CAAA,IAAA,EAAA,IQPjCnE,CAAoBF,UROa,EATxB,MQETE,CAAuCP,CRON,CAAA,KQPjCO,EAAgD,CAAhDA,CAAP;AEDGsE,AGKH,AXpCA,AMiCA,AgBuCF,ATFA,ACEA,QNzCKA,GR/BH,IAAA,EAAA,CQ+Ba,CAAChG,CR/Bd,CAAA,EAAA,EQ+Ba,AR/Bb,CQ+BGgG,CAAmBE,CR/BJ5C,IAAlB,CAAA,GQ+BG0C,GAA+B,AR/BlC,EAAA,EQ+BsCtE,AR/BtC,EAAA,EQ+B0C,AR/BlB,CQ+BmBmE,cAAT,CAAwB7F,MAAxB,EAAgC;AAC9D4D,AVOoC,AEvCnC,AMkCN,AgBuCD,ATFA,ACEA,QhBhCMxC,EUTAwC,ERhCOL,GQgCF,AVO+B,AEvC1B,EQgCF,CVYNjD,AE5CYgD,IAAJ,CAAA,CQ+BoD,CVQ1B,AEvC1B,CFyCVlC,AEzCC,OFuCmC;AUNpCuC,AVMoC,AQJ1C,AgBuCA,ATFA,ACEA,QhBhCMtC,EUTAsC,GAAG,AVMiC,EUN5B,CVWNrD,OALkC,CAGpCe,KAHoC;AUR0B,AGMlE,AbEwC,AEtCvC,AsB0EH,ATFA,ACEA,QhBhCMd,CUZ8B,AGM7BP,CHNFgG,ER9BE,GWoCL,GAAcP,CXpCT,CAAOpC,CFsC4B,GAKlC/C,CE3CD,CAAA,KFsCmC,AEtClB,CF0ClBC,OaLHY,AXrCA,EAA+B,IFsCQ,CaDhC,AbCgC,CaD/BoF,AbQP,MaRDpF,CAAeD,4BAAmBpB,gBAAnBoB,EAAfC,CADasE,EAEbxF,8BAFawF,CAAd,CATD,CAcC;AH3BuB,ARbrB,AsB0EJ,ATFA,ACEA,ON7DyB,CAqBrB;AGOF,AbIE,AE5CA,AsB0EJ,ATFA,ACEA,QHlCM,AbIErE,OaJKM,AbIT,EAAa,EaJX,KAAgB,WAAhB,IAA+BA,IAAI,CAACC,YAAxC,EAAsD;AACrD,AbIG,AwB8BN,ATFA,ACEA,UhB9BUX,CaJFY,YAAL,CbIqB,CAACN,CaJF,IAAII,EbIjBV,CAAuBI,CaJF,CAACO,KbItBX,IAAkC,CAAtC,EaJiB,AbIwB,CaJF,KAAKhB,MAA3B,CAApB;AHPC,AGTH,AbqBO,AE7CLqD,AsB2EH,ATFA,ACEA,KHnDC,CAmBC,EX3CCA,KQiCQ2C,ARjCH,CF6CM,EE7CH3C,EF6CO5C,GE7CF,CAAC8C,CQiCI,CAACvD,CRjCN,CAAbqD,EF6CW,CAAA,CUZO,CAAV2C,CAAmBE,SAAnBF,CAA6BhD,MAA7BgD,CAAoC/B,WVYjC,MAAA,CAA4C7C,MUZHS,CVYzC,CAAA,CAAN,EUZuCoC,CAApC+B,CAAP;AACA,AVYG,AE7CJ,AMkCI,AgByCP,ATFA,ACEA,SRzCgBJ,2BAAT,GAAuC;AE1B5C,AHgDF,ACrBC,AgByCD,ATFA,ACEA,GN9EY,EAqCV,IHqBOV,YAAT,CAAsBC,QAAtB,EAAgCC,MAAhC,EAAwCV,GAAxC,EACA;AGrBE,AGOA,AbGI,AE7CJ,AKyDD,ACtBA,AgByCD,ATFA,ACEA,MTnBKN,GMfEoC,EbGIpF,EE7CFiC,EKyDR,CADD,CAGC,CPdK,AE7CJ,GF6CmBjC,OAAf,IaHJ,GAA+B,IAAIgC,cAAJ,EAA/B;AHNA,AVHwC,AEhCxC,AK2DD,AiBiBD,ATFA,ACEA,IHhCC,CbZyC,CAetC;AUXDgB,AGSF,ALVA,AgB0CD,ATFA,ACEA,INzCGA,SADD,EAAA,SAAA,SAAA,CACWM,GADX,EACgB;AACd,AGSH,ANcA,ACxBA,AgB0CD,ATFA,ACEA,MTlBKS,ACxBEW,QDwBM,KAAKX,ECxBI,GAAG,CAAA,EDwBC,CAACE,EAATF,ECxBczD,EDwBCyD,ECxBR,KAAA,CDwBgB,CAACrD,IAA7B,CAAZ,EAAgD,ECxBxB,GAAA,WAAA,GAAA,OAAA,CAAOJ,IAAP,CAAA,MAAgB,QAAxC;AEEG,AGSH,AbCG,AOaF0C,ACxBD,AgB0CD,ATFA,ACEA,ITlBEA,IPbM/C,CQXAyE,CECEK,GVUN,AOaO,EPbI,COaDf,EGvBI,GAAG,CHuBD,CAAA,CCxBG,CECElB,CRpCX,EMmCa,CECN,CAAS,IAAIA,CFDAxC,GECJ,CAASgD,AFDD,CDwBlB,ACxBmBmB,EECT,EAAcO,EHuBxB,CAAkBjB,OCxBX,CECG,AHuBgB,CAACE,EAATF,CCxBoB,CECE,CAAvC,CHuBgCA,CGvBU,CAA1C,CAAjB,IFDH,CDwB4D,CAACrD,IAA1C,CAAA,CAAlBsC;AGtBE,AGSH,AbCK,AE/CQ,AKqDd,ACjBC,AgB0CD,ATFA,ACEA,GTzBA,CASC,MPfSnD,CE/CI,EQqCH,CAACkF,CRrCE,KAAA,EQqCM,AVUE,CUVDE,AVUE/E,AE/CT,OQqCF6E,AVUFlF,CAAqBI,CE/CjB,CAAA,EQqCmBqD,CVUvBzD,EUVC,CRrCG,CF+C0B,CAAlC,AE/CEqC,CQqCgC,CVUG,EE/C7B,CQqCV,ERrCU,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AQiCZ,AGcD,AbCO,AEhDAA,AK+DP,AiBgBD,ATFA,KL5CE,GRjCMA,IAAM,CAAA,CFgDA,IAAI7C,AEhDJ,CAAN6C,GAAM,MFgDA,CAAA,EEhDA,CAAA,KAAA,CAANA,oBFgDM,MAAA,CAA0CjC,KAA1C,CAAA,CAAN;AUTL2B,AGSF,AbCM,AEjDO,AsBgFd,ATFA,ILvCGA,MAND,EAAA,SAAA,MAAA,CAMQnB,KANR,EAMe7B,MANf,EAMuB;AACrB,AGSH,AWgCD,ATFA;ALtCI,AGSH,AbAK,AEjDJ,AK+DD,AiBkBD,ATFA,MRhBKoE,IL/DGvC,CFiDGR,IEjDE,AK+DC,CPdR,EEjDUiC,CFiDGjC,COcAiE,EL/DC,CAACzE,CFiDf,EEjDUyC,EAAd,CK+DD,EAA6B;AGtB1B,AGSH,AbrByC,AE5BxC,AK+DAc,AQgBF,IRhBEA,CPnCwC,CAuBtC,IEnDIZ,GK+DG,GAAG4B,CL/DC,GAAG9B,EK+DE,CAACc,CL/DC,CAACvD,GAALyC,EAAhB,EK+DAc;AGtBE,AGSH,AXjDC,AKkDF,AQ6BA,GR7BA,CAeC,MLjEKf,KAAK,GAAG,KAAKA,KAAjB;AWkDD,AE8BD;ALvCI,AGUH,AbAG,AElDF,AagFF,Qf9BQ9C,GElDN,IAAA,GAAA,GFkDE,AElDF,CAAA,CFkDqB,CElDrB,GAAA,GAAkB+C,IAAlB,CAAA,MAAA,EAAA,GAAA,EAAA,EAAwB;AQyCtB,AGUH,AbAK,AEnDC,AKiEN,AQgBD,MRhBK,IGxBG,CAACsC,AVUErF,CEnDEgD,CKiEDa,ELjEI,GAAId,IAAJ,AKiEX,CLjEW,CFmDV,EEnDU,CFmDW/C,AEnDpB,AKiEmB,UAAzB,EAAqC,CPdhC,aUVF,EAAoC;AACnC,AGUJ,Ab1ByC,AOwCxC6D,AQgBF,IRhBEA,CPxCwC,CA4BtC,OOYO,GAAGA,SAAS,CAACM,GAAD,CAArBN;AGvBG,AGUJ,AbEG,AEtDD,AKgDH,AQkCA,GRlCA,CAoBC,QLpEM,OAAA,CAAOf,KAAK,CAACE,GAAD,CAAZ,CAAA,KAAsB,QAA1B,EAAoC;AQ2CnC,AGUH,AXpDGF,AakFJ,UblFIA,KAAK,CAACE,GAAD,CAALF,GAAa,EAAbA;AWqDH,AXpDG,AakFJ;AF7BC,AbAG,AOcH,AQgBD,MRhBK8B,EPdG,MOcK,CPdEhE,GOcE,IPdT,GOcgBiD,EPdG,OOcV,CPdb,EAAiC,EOcC,QAArC,EAA+C;AGzB5C,AGYH,AbAKjD,AErDHkC,AKmED,AQgBF,Mf9BMlC,EErDHkC,EQyCK,CAAC2C,EVYI,AErDL,GFqDQ,AErDL3C,CFqDMlC,IUZE,ARzCH,CQyCInB,ARzCHuD,EFqDD,CAAVpC,AErDU,CAAbkC,EQyCgB,CAAf,EAAyB;AACxB2C,AGYJ,AbhCyC,AErBvC,AKmED,AQgBF,Kf9D0C,CAiCtC,EUbCA,UAAU,CAAChG,MAAD,CAAVgG,GAAqB,EAArBA;AACA,AGYJ,AE8BD;ALzCI,AGYH,AXtDC,AKmEA,AQiBF,abpFS3C,KAAK,CAACG,OAAD,CAALH,GAAiBxB,KAAxB;AWuDD,AbDGV,AErDF,AKmEA,AQiBF,If/BIA,IOcImB,GPdG,CAACf,AOcA,GAAA,CPdRJ,CAAarB,KOcL,CAAUsE,SAAV,CAAV,wBPdEjD,EAlCsC,CAmCtC;AaCH,AE8BD;AL3CI,AGcH,AbDG,AOaF,AQkBF,Sf/BSnB,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AE3BoC,AEqCJ,UFrCIA,IAAI,EAAJA,IAF2B;AAG3BC,AEqCJ,UFrCIA,IAAI,EAAJA,IAH2B,cbGflF,OAAOC,MAAM;AaCzB2C,AbAA,AeqCJ,UFrCIA,AbAMrC,IAAI,GaAH,AbAM,EaAbqC,GbAkB1C,IaJS,GbId,CAAaF,KAAb,EAAoBC,IAApB,CAAb;AaCA9B,AbAA,AeqCJ,UFrCIA,AbAMqC,MaAA,EAAG,EbAO,GaAFrC,AbAKoC,IAAI,CAACd,OAALc,CAAa,KAAbA,CAAnB,CAFyB,CAGzB;AaN2B,AE2C/B,SF3CkBf,CAAf;AbOC,AeqCJ,UfrCQgB,UAAU,GAAG,CAAjB,EAAoB;AaCrB,AbAG,AeqCN,YFrCO2E,GbAM,CAAC,EaAD,KAAK1B,SAAf,EAA0B;AACzB,AbAIhD,AeqCR,UfrCQA,IAAI,EAAE,CaAH0E,MAAP,EbDU;AaEV,AbAInF,AeqCR,UfrCQA,KAAK,EAAEO;AarDd,AbmDa,AewCd,OF3FC,CAwDC,CbLW,CAAP;AAID,AeqCL;AACA;AFpCE,AbDE,AesCJ,UFrCQuC,AbDEjE,KaCG,AbDE,GaCCuG,AbDE,EAAd,6BaC2C,CAAC9G,UAAD,EAAakB,KAAK,CAACsD,KAAnB,CAA7C,CAzDD,CA0DC;AEqCF;AFpCE,AbFE,AeuCJ,UFrCMA,AbFEtC,KaEG,CAACzB,IbFM,EaEZ+D,CbFe,CAAjB,EAAoB,CaED,CAArB,EAAwB;AACvBjF,AbFGgB,AeuCN,QFrCGhB,AbFGgB,KAAK,CAACa,CaEF,CAAC2F,EbFLxG,CAAW,EaEdhB,CAAA,WAAA,MAAA,CAAwBiF,KAAK,CAAC7D,IAAN6D,CAAW,IAAXA,CAAxB,EAAA,yCAAA,EAAA,MAAA,CAAgF,KAAK3E,MAArF,EAAA,KAAA,CAAAN;AACA,AbFK4C,AeuCR,UfvCQA,IAAI,CaEF,CbFI,CaEX,QbHc;Aa1DhB,Ab4DOT,AeuCR,OFnGC,CAgEC,EbJMA,KAAK,EAAEO,IAAI,CAACG,KAALH,CAAW,CAAXA,EAAcC,UAAdD;AaKb,AbPe,Ae0CjB,Sf1CM1B;AAID,AeuCL;AACA;AFpCE,AbHEA,AewCJ,MfxCIA,IaGIsD,CbHC,CAA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":"Reddit-Search.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export default{\r\n    search: function(searchTerm){\r\n     return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&limit=100&sort=new`)\r\n      .then(res => res.json())\r\n      .then(data => data.data.children.map(data =>\r\n          data.data)) \r\n      .catch(err => console.log(err))\r\n    }\r\n}","// Fallback locale.\r\n// (when not a single one of the supplied \"preferred\" locales is available)\r\nlet defaultLocale = 'en'\r\n\r\n// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nconst localesData = {}\r\n\r\nexport function getDefaultLocale() {\r\n  return defaultLocale\r\n}\r\n\r\nexport function setDefaultLocale(locale) {\r\n  defaultLocale = locale\r\n}\r\n\r\n// export function isLocaleDataAvailable(locale) {\r\n//  return localesData.hasOwnProperty(locale)\r\n// }\r\n\r\nexport function getLocaleData(locale) {\r\n  return localesData[locale]\r\n}\r\n\r\nexport function addLocaleData(localeData) {\r\n  if (!localeData) {\r\n    throw new Error('No locale data passed')\r\n  }\r\n  // This locale data is stored in a global variable\r\n  // and later used when calling `.format(time)`.\r\n  localesData[localeData.locale] = localeData\r\n}","import {\r\n  getLocaleData\r\n} from './LocaleDataStore'\r\n\r\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * @param  {string} locale\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocale(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocale(\"xx-Latn\")\r\n */\r\nexport default function resolveLocale(locale, options = {}) {\r\n  const localeMatcher = options.localeMatcher || 'lookup'\r\n  switch (localeMatcher) {\r\n    case 'lookup':\r\n      return resolveLocaleLookup(locale)\r\n    // \"best fit\" locale matching is not supported.\r\n    // https://github.com/catamphetamine/relative-time-format/issues/2\r\n    case 'best fit':\r\n      // return resolveLocaleBestFit(locale)\r\n      return resolveLocaleLookup(locale)\r\n    default:\r\n      throw new RangeError(`Invalid \"localeMatcher\" option: ${localeMatcher}`)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * Starts from the most specific locale and gradually\r\n * falls back to less specific ones.\r\n * This is a basic implementation of the \"lookup\" algorithm.\r\n * https://tools.ietf.org/html/rfc4647#section-3.4\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocaleLookup(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocaleLookup(\"xx-Latn\")\r\n */\r\nexport function resolveLocaleLookup(locale) {\r\n  if (getLocaleData(locale)) {\r\n    return locale\r\n  }\r\n  // `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\r\n  const parts = locale.split('-')\r\n  while (locale.length > 1) {\r\n    parts.pop()\r\n    locale = parts.join('-')\r\n    if (getLocaleData(locale)) {\r\n      return locale\r\n    }\r\n  }\r\n}\r\n","import {\r\n  getDefaultLocale,\r\n  setDefaultLocale,\r\n  getLocaleData,\r\n  addLocaleData\r\n} from './LocaleDataStore'\r\n\r\nimport resolveLocale from './resolveLocale'\r\n\r\n// Valid time units.\r\nexport const UNITS = [\r\n  \"second\",\r\n  \"minute\",\r\n  \"hour\",\r\n  \"day\",\r\n  \"week\",\r\n  \"month\",\r\n  \"quarter\",\r\n  \"year\"\r\n]\r\n\r\n// Valid values for the `numeric` option.\r\nconst NUMERIC_VALUES = [\r\n  \"auto\",\r\n  \"always\"\r\n]\r\n\r\n// Valid values for the `style` option.\r\nconst STYLE_VALUES = [\r\n  \"long\",\r\n  \"short\",\r\n  \"narrow\"\r\n]\r\n\r\n/**\r\n * Polyfill for `Intl.RelativeTimeFormat` proposal.\r\n * https://github.com/tc39/proposal-intl-relative-time\r\n * https://github.com/tc39/proposal-intl-relative-time/issues/55\r\n */\r\nexport default class RelativeTimeFormat {\r\n  numeric = \"always\"\r\n  style = \"long\"\r\n  localeMatcher = \"lookup\"\r\n\r\n  /**\r\n   * @param {(string|string[])} [locales] - Preferred locales (or locale).\r\n   * @param {Object} [options] - Formatting options.\r\n   * @param {string} [options.style=\"long\"] - One of: \"long\", \"short\", \"narrow\".\r\n   * @param {string} [options.numeric=\"always\"] - (Version >= 2) One of: \"always\", \"auto\".\r\n   * @param {string} [options.localeMatcher=\"lookup\"] - One of: \"lookup\", \"best fit\". Currently only \"lookup\" is supported.\r\n   */\r\n  constructor(locales = [], options = {}) {\r\n    const {\r\n      numeric,\r\n      style,\r\n      localeMatcher\r\n    } = options\r\n\r\n    // Set `numeric` option.\r\n    if (numeric) {\r\n      if (NUMERIC_VALUES.indexOf(numeric) < 0) {\r\n        throw new RangeError(`Invalid \"numeric\" option: ${numeric}`)\r\n      }\r\n      this.numeric = numeric\r\n    }\r\n\r\n    // Set `style` option.\r\n    if (style) {\r\n      if (STYLE_VALUES.indexOf(style) < 0) {\r\n        throw new RangeError(`Invalid \"style\" option: ${style}`)\r\n      }\r\n      this.style = style\r\n    }\r\n\r\n    // Set `localeMatcher` option.\r\n    if (localeMatcher) {\r\n      this.localeMatcher = localeMatcher\r\n    }\r\n\r\n    // Set `locale`.\r\n    // Convert `locales` to an array.\r\n    if (typeof locales === 'string') {\r\n      locales = [locales]\r\n    }\r\n    // Add default locale.\r\n    locales.push(getDefaultLocale())\r\n    // Choose the most appropriate locale.\r\n    this.locale = RelativeTimeFormat.supportedLocalesOf(locales, {\r\n      localeMatcher: this.localeMatcher\r\n    })[0]\r\n    if (!this.locale) {\r\n      throw new TypeError(\"No supported locale was found\")\r\n    }\r\n    this.locale = resolveLocale(this.locale, {\r\n      localeMatcher: this.localeMatcher\r\n    })\r\n\r\n    // Use `Intl.NumberFormat` for formatting numbers (when available).\r\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\r\n      this.numberFormat = new Intl.NumberFormat(this.locale)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Formats time `value` in `units` (either in past or in future).\r\n   * @param {number} value - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"2 days ago\"\r\n   * rtf.format(-2, \"day\")\r\n   * // Returns \"in 5 minutes\"\r\n   * rtf.format(5, \"minute\")\r\n   */\r\n  format(value, unit) {\r\n    return this.getRule(value, unit).replace('{0}', this.formatNumber(Math.abs(value)))\r\n  }\r\n\r\n  /**\r\n   * Formats time `value` in `units` (either in past or in future).\r\n   * @param {number} value - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {Object[]} The parts (`{ type, value }`).\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Version 1.\r\n   * // Returns [\r\n   * //   { type: \"literal\", value: \"in \" },\r\n   * //   { type: \"day\", value: \"100\" },\r\n   * //   { type: \"literal\", value: \" days\" }\r\n   * // ]\r\n   * rtf.formatToParts(100, \"day\")\r\n   * //\r\n   * // Version 2.\r\n   * // Returns [\r\n   * //   { type: \"literal\", value: \"in \" },\r\n   * //   { type: \"integer\", value: \"100\", unit: \"day\" },\r\n   * //   { type: \"literal\", value: \" days\" }\r\n   * // ]\r\n   * rtf.formatToParts(100, \"day\")\r\n   */\r\n  formatToParts(value, unit) {\r\n    const rule = this.getRule(value, unit)\r\n    const valueIndex = rule.indexOf(\"{0}\")\r\n    // \"yesterday\"/\"today\"/\"tomorrow\".\r\n    if (valueIndex < 0) {\r\n      return [{\r\n        type: \"literal\",\r\n        value: rule\r\n      }]\r\n    }\r\n    const parts = []\r\n    if (valueIndex > 0) {\r\n      parts.push({\r\n        type: \"literal\",\r\n        value: rule.slice(0, valueIndex)\r\n      })\r\n    }\r\n    parts.push({\r\n      unit,\r\n      type: \"integer\",\r\n      value: this.formatNumber(Math.abs(value))\r\n    })\r\n    if (valueIndex + \"{0}\".length < rule.length - 1) {\r\n      parts.push({\r\n        type: \"literal\",\r\n        value: rule.slice(valueIndex + \"{0}\".length)\r\n      })\r\n    }\r\n    return parts\r\n  }\r\n\r\n  /**\r\n   * Returns formatting rule for `value` in `units` (either in past or in future).\r\n   * @param {number} value - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"{0} days ago\"\r\n   * getRule(-2, \"day\")\r\n   */\r\n  getRule(value, unit) {\r\n    if (UNITS.indexOf(unit) < 0) {\r\n      throw new RangeError(`Unknown time unit: ${unit}.`)\r\n    }\r\n    // Get locale-specific time interval formatting rules\r\n    // of a given `style` for the given value of measurement `unit`.\r\n    //\r\n    // E.g.:\r\n    //\r\n    // ```json\r\n    // {\r\n    //  \"past\": {\r\n    //    \"one\": \"a second ago\",\r\n    //    \"other\": \"{0} seconds ago\"\r\n    //  },\r\n    //  \"future\": {\r\n    //    \"one\": \"in a second\",\r\n    //    \"other\": \"in {0} seconds\"\r\n    //  }\r\n    // }\r\n    // ```\r\n    //\r\n    const unitRules = getLocaleData(this.locale)[this.style][unit]\r\n    // Special case for \"yesterday\"/\"today\"/\"tomorrow\".\r\n    if (this.numeric === \"auto\") {\r\n      // \"yesterday\", \"the day before yesterday\", etc.\r\n      if (value === -2 || value === -1) {\r\n        const message = unitRules[`previous${value === -1 ? '' : '-' + Math.abs(value)}`]\r\n        if (message) {\r\n          return message\r\n        }\r\n      }\r\n      // \"tomorrow\", \"the day after tomorrow\", etc.\r\n      else if (value === 1 || value === 2) {\r\n        const message = unitRules[`next${value === 1 ? '' : '-' + Math.abs(value)}`]\r\n        if (message) {\r\n          return message\r\n        }\r\n      }\r\n      // \"today\"\r\n      else if (value === 0) {\r\n        if (unitRules.current) {\r\n          return unitRules.current\r\n        }\r\n      }\r\n    }\r\n    // Choose either \"past\" or \"future\" based on time `value` sign.\r\n    // If there's only \"other\" then it's being collapsed.\r\n    // (the resulting bundle size optimization technique)\r\n    const quantifierRules = unitRules[value <= 0 ? \"past\" : \"future\"]\r\n    // Bundle size optimization technique.\r\n    if (typeof quantifierRules === \"string\") {\r\n      return quantifierRules\r\n    }\r\n    // Quantify `value`.\r\n    const quantify = getLocaleData(this.locale).quantify\r\n    let quantifier = quantify && quantify(Math.abs(value))\r\n    // There seems to be no such locale in CLDR\r\n    // for which `quantify` is missing\r\n    // and still `past` and `future` messages\r\n    // contain something other than \"other\".\r\n    /* istanbul ignore next */\r\n    quantifier = quantifier || 'other'\r\n    // \"other\" rule is supposed to be always present.\r\n    // If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n    return quantifierRules[quantifier] || quantifierRules.other\r\n  }\r\n\r\n  /**\r\n   * Formats a number into a string.\r\n   * Uses `Intl.NumberFormat` when available.\r\n   * @param  {number} number\r\n   * @return {string}\r\n   */\r\n  formatNumber(number) {\r\n    return this.numberFormat ? this.numberFormat.format(number) : String(number)\r\n  }\r\n\r\n  /**\r\n   * Returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this DateTimeFormat object.\r\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n   * @return {Object}\r\n   */\r\n  resolvedOptions() {\r\n    return {\r\n      locale: this.locale,\r\n      style: this.style,\r\n      numeric: this.numeric\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an array containing those of the provided locales\r\n * that are supported in collation without having to fall back\r\n * to the runtime's default locale.\r\n * @param {(string|string[])} locale - A string with a BCP 47 language tag, or an array of such strings. For the general form of the locales argument, see the Intl page.\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string[]} An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.\r\n * @example\r\n * var locales = ['ban', 'id-u-co-pinyin', 'es-PY']\r\n * var options = { localeMatcher: 'lookup' }\r\n * // Returns [\"id\", \"es-PY\"]\r\n * Intl.RelativeTimeFormat.supportedLocalesOf(locales, options)\r\n */\r\nRelativeTimeFormat.supportedLocalesOf = function(locales, options = {}) {\r\n  // Convert `locales` to an array.\r\n  if (typeof locales === 'string') {\r\n    locales = [locales]\r\n  }\r\n  return locales.filter(locale => resolveLocale(locale, options))\r\n}\r\n\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\nRelativeTimeFormat.addLocale = addLocaleData\r\n\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\nRelativeTimeFormat.setDefaultLocale = setDefaultLocale\r\n\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\nRelativeTimeFormat.getDefaultLocale = getDefaultLocale\r\n\r\n/**\r\n * Extracts language from an IETF BCP 47 language tag.\r\n * @param {string} languageTag - IETF BCP 47 language tag.\r\n * @return {string}\r\n * @example\r\n * // Returns \"he\"\r\n * getLanguageFromLanguageTag(\"he-IL-u-ca-hebrew-tz-jeruslm\")\r\n * // Returns \"ar\"\r\n * getLanguageFromLanguageTag(\"ar-u-nu-latn\")\r\n */\r\n// export function getLanguageFromLanguageTag(languageTag) {\r\n//   const hyphenIndex = languageTag.indexOf('-')\r\n//   if (hyphenIndex > 0) {\r\n//     return languageTag.slice(0, hyphenIndex)\r\n//   }\r\n//   return languageTag\r\n// }","export { default } from './modules/RelativeTimeFormat'","/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\r\nexport default class Cache {\r\n\tcache = {}\r\n\r\n\tget(...keys) {\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache !== 'object') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache\r\n\t}\r\n\r\n\tput(...keys) {\r\n\t\tconst value = keys.pop()\r\n\t\tconst lastKey = keys.pop()\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache[key] !== 'object') {\r\n\t\t\t\tcache[key] = {}\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache[lastKey] = value\r\n\t}\r\n}","export const minute = 60 // in seconds\r\n\r\nexport const hour = 60 * minute // in seconds\r\n\r\nexport const day = 24 * hour // in seconds\r\n\r\n// https://www.quora.com/What-is-the-average-number-of-days-in-a-month\r\nexport const month = 30.44 * day // in seconds\r\n\r\n// \"400 years have 146097 days (taking into account leap year rules)\"\r\nexport const year = (146097 / 400) * day // in seconds\r\n\r\n/**\r\n * Returns a step of gradation corresponding to the unit.\r\n * @param  {Object[]} gradation\r\n * @param  {string} unit\r\n * @return {?Object}\r\n */\r\nexport function getStep(gradation, unit) {\r\n\tfor (const step of gradation) {\r\n\t\tif (step.unit === unit) {\r\n\t\t\treturn step\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\r\nexport function getDate(value) {\r\n\treturn value instanceof Date ? value : new Date(value)\r\n}","import { day, month, year } from './helpers'\r\n\r\n// just now\r\n// 1 second ago\r\n// 2 seconds ago\r\n// …\r\n// 59 seconds ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// …\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// …\r\n// 7 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// …\r\n// 3 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// …\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// …\r\nexport default\r\n[\r\n\t{\r\n\t\tfactor: 1,\r\n\t\tunit: 'now'\r\n\t},\r\n\t{\r\n\t\tthreshold: 0.5,\r\n\t\tfactor: 1,\r\n\t\tunit: 'second'\r\n\t},\r\n\t{\r\n\t\tthreshold: 59.5,\r\n\t\tfactor: 60,\r\n\t\tunit: 'minute'\r\n\t},\r\n\t{\r\n\t\tthreshold: 59.5 * 60,\r\n\t\tfactor: 60 * 60,\r\n\t\tunit: 'hour'\r\n\t},\r\n\t{\r\n\t\tthreshold: 23.5 * 60 * 60,\r\n\t\tfactor: day,\r\n\t\tunit: 'day'\r\n\t},\r\n\t{\r\n\t\tthreshold: 6.5 * day,\r\n\t\tfactor: 7 * day,\r\n\t\tunit: 'week'\r\n\t},\r\n\t{\r\n\t\tthreshold: 3.5 * 7 * day,\r\n\t\tfactor: month,\r\n\t\tunit: 'month'\r\n\t},\r\n\t{\r\n\t\tthreshold: 11.5 * month,\r\n\t\tfactor: year,\r\n\t\tunit: 'year'\r\n\t}\r\n]","import { day, month, year } from './helpers'\r\n\r\n// just now\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// 5 minutes ago\r\n// 10 minutes ago\r\n// 15 minutes ago\r\n// 20 minutes ago\r\n// an hour ago\r\n// 2 hours ago\r\n// …\r\n// 20 hours ago\r\n// a day ago\r\n// 2 days ago\r\n// 5 days ago\r\n// a week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// a month ago\r\n// 2 months ago\r\n// 4 months ago\r\n// a year ago\r\n// 2 years ago\r\n// …\r\nexport default\r\n[\r\n\t{\r\n\t\tfactor: 1,\r\n\t\tunit: 'now'\r\n\t},\r\n\t{\r\n\t\tthreshold: 1,\r\n\t\tthreshold_for_now: 45,\r\n\t\tfactor: 1,\r\n\t\tunit: 'second'\r\n\t},\r\n\t{\r\n\t\tthreshold: 45,\r\n\t\tfactor: 60,\r\n\t\tunit: 'minute'\r\n\t},\r\n\t{\r\n\t\tthreshold: 2.5 * 60,\r\n\t\tfactor: 60,\r\n\t\tgranularity: 5,\r\n\t\tunit: 'minute'\r\n\t},\r\n\t{\r\n\t\tthreshold: 22.5 * 60,\r\n\t\tfactor: 30 * 60,\r\n\t\tunit: 'half-hour'\r\n\t},\r\n\t{\r\n\t\tthreshold: 42.5 * 60,\r\n\t\tthreshold_for_minute: 52.5 * 60,\r\n\t\tfactor: 60 * 60,\r\n\t\tunit: 'hour'\r\n\t},\r\n\t{\r\n\t\tthreshold: (20.5 / 24) * day,\r\n\t\tfactor: day,\r\n\t\tunit: 'day'\r\n\t},\r\n\t{\r\n\t\tthreshold: 5.5 * day,\r\n\t\tfactor: 7 * day,\r\n\t\tunit: 'week'\r\n\t},\r\n\t{\r\n\t\tthreshold: 3.5 * 7 * day,\r\n\t\tfactor: month,\r\n\t\tunit: 'month'\r\n\t},\r\n\t{\r\n\t\tthreshold: 10.5 * month,\r\n\t\tfactor: year,\r\n\t\tunit: 'year'\r\n\t}\r\n]","// A gradation is a mapping from a time interval (in seconds)\r\n// to the most appropriate time interval measurement unit\r\n// for describing it, along with the amount of such units.\r\n//\r\n// E.g. for \"canonical\" gradation:\r\n//\r\n// 0 -> 1 'now'\r\n// 0.5 -> 1 'second'\r\n// 60 -> 1 'minute'\r\n// 91 -> 2 'minute's\r\n// ...\r\n//\r\n// Each gradation unit can have:\r\n//\r\n// * unit - (required) The name of the time interval measurement unit.\r\n//\r\n// * factor - (required) The amount of seconds will be divided by this number for this unit.\r\n//\r\n// * granularity - A step for the unit's resulting \"amount\" value.\r\n//\r\n// * threshold - Min value (in seconds) for this unit. Is required for non-first unit.\r\n//\r\n// * threshold_for_[unit] - A specific threshold required for moving from `[unit]` to this unit.\r\n//                          E.g. if \"now\" unit is present in time units gradation\r\n//                          then `threshold_for_now` can be set to `45` seconds.\r\n//                          Otherwise, if \"now\" unit is omitted from time units gradation,\r\n//                          then `elapsed(0)` will output \"0 seconds\" because there's no `threshold`.\r\n//\r\n// A user can supply his own gradation.\r\n//\r\n// Don't name a gradation \"default\"\r\n// because that would conflict with the\r\n// CommonJS \"interoperability\" export layer.\r\n//\r\nexport { default as canonical } from './canonical'\r\nexport { default as convenient } from './convenient'\r\nexport { minute, hour, day, month, year, getStep, getDate } from './helpers'","import { convenient } from './gradation'\r\n\r\n/**\r\n * Takes seconds `elapsed` and measures them against\r\n * `gradation` to return the suitable `gradation` step.\r\n *\r\n * @param {number} elapsed - Time interval (in seconds)\r\n *\r\n * @param {string[]} units - A list of allowed time units\r\n *                           (e.g. ['second', 'minute', 'hour', …])\r\n *\r\n * @param {Object} [gradation] - Time scale gradation steps.\r\n *\r\n *                               E.g.:\r\n *                               [\r\n *                                 { unit: 'second', factor: 1 },\r\n *                                 { unit: 'minute', factor: 60, threshold: 60 },\r\n *                                 { format(), threshold: 24 * 60 * 60 },\r\n *                                 …\r\n *                               ]\r\n *\r\n * @return {?Object} `gradation` step.\r\n */\r\nexport default function grade(elapsed, now, units, gradation = convenient)\r\n{\r\n\t// Leave only allowed time measurement units.\r\n\t// E.g. omit \"quarter\" unit.\r\n\tgradation = getAllowedSteps(gradation, units)\r\n\r\n\t// If no steps of gradation fit the conditions\r\n\t// then return nothing.\r\n\tif (gradation.length === 0) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Find the most appropriate gradation step\r\n\tconst i = findGradationStep(elapsed, now, gradation)\r\n\tconst step = gradation[i]\r\n\r\n\t// If time elapsed is too small and even\r\n\t// the first gradation step doesn't suit it\r\n\t// then return nothing.\r\n\tif (i === -1) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Apply granularity to the time amount\r\n\t// (and fall back to the previous step\r\n\t//  if the first level of granularity\r\n\t//  isn't met by this amount)\r\n\tif (step.granularity) {\r\n\t\t// Recalculate the elapsed time amount based on granularity\r\n\t\tconst amount = Math.round((elapsed / step.factor) / step.granularity) * step.granularity\r\n\t\t// If the granularity for this step\r\n\t\t// is too high, then fallback\r\n\t\t// to the previous step of gradation.\r\n\t\t// (if there is any previous step of gradation)\r\n\t\tif (amount === 0 && i > 0) {\r\n\t\t\treturn gradation[i - 1]\r\n\t\t}\r\n\t}\r\n\r\n\treturn step\r\n}\r\n\r\n/**\r\n * Gets threshold for moving from `fromStep` to `next_step`.\r\n * @param  {Object} fromStep - From step.\r\n * @param  {Object} next_step - To step.\r\n * @param  {number} now - The current timestamp.\r\n * @return {number}\r\n * @throws Will throw if no threshold is found.\r\n */\r\nfunction getThreshold(fromStep, toStep, now)\r\n{\r\n\tlet threshold\r\n\r\n\t// Allows custom thresholds when moving\r\n\t// from a specific step to a specific step.\r\n\tif (fromStep && (fromStep.id || fromStep.unit)) {\r\n\t\tthreshold = toStep[`threshold_for_${fromStep.id || fromStep.unit}`]\r\n\t}\r\n\r\n\t// If no custom threshold is set for this transition\r\n\t// then use the usual threshold for the next step.\r\n\tif (threshold === undefined) {\r\n\t\tthreshold = toStep.threshold\r\n\t}\r\n\r\n\t// Convert threshold to a number.\r\n\tif (typeof threshold === 'function') {\r\n\t\tthreshold = threshold(now)\r\n\t}\r\n\r\n\t// Throw if no threshold is found.\r\n\tif (fromStep && typeof threshold !== 'number') {\r\n\t\t// Babel transforms `typeof` into some \"branches\"\r\n\t\t// so istanbul will show this as \"branch not covered\".\r\n\t\t/* istanbul ignore next */\r\n\t\tconst type = typeof threshold\r\n\t\tthrow new Error(`Each step of a gradation must have a threshold defined except for the first one. Got \"${threshold}\", ${type}. Step: ${JSON.stringify(toStep)}`)\r\n\t}\r\n\r\n\treturn threshold\r\n}\r\n\r\n/**\r\n * @param  {number} elapsed - Time elapsed (in seconds).\r\n * @param  {number} now - Current timestamp.\r\n * @param  {Object} gradation - Gradation.\r\n * @param  {number} i - Gradation step currently being tested.\r\n * @return {number} Gradation step index.\r\n */\r\nfunction findGradationStep(elapsed, now, gradation, i = 0)\r\n{\r\n\t// If the threshold for moving from previous step\r\n\t// to this step is too high then return the previous step.\r\n\tif (elapsed < getThreshold(gradation[i - 1], gradation[i], now)) {\r\n\t\treturn i - 1\r\n\t}\r\n\t// If it's the last step of gradation then return it.\r\n\tif (i === gradation.length - 1) {\r\n\t\treturn i\r\n\t}\r\n\t// Move to the next step.\r\n\treturn findGradationStep(elapsed, now, gradation, i + 1)\r\n}\r\n\r\n/**\r\n * Leaves only allowed gradation steps.\r\n * @param  {Object[]} gradation\r\n * @param  {string[]} units - Allowed time units.\r\n * @return {Object[]}\r\n */\r\nfunction getAllowedSteps(gradation, units)\r\n{\r\n\treturn gradation.filter(({ unit }) => {\r\n\t\t// If this step has a `unit` defined\r\n\t\t// then this `unit` must be in the list of `units` allowed.\r\n\t\tif (unit) {\r\n\t\t\treturn units.indexOf(unit) >= 0\r\n\t\t}\r\n\t\t// A gradation step is not required to specify a `unit`.\r\n\t\t// E.g. for Twitter gradation it specifies `format()` instead.\r\n\t\treturn true\r\n\t})\r\n}","// Chooses the most appropriate locale\r\n// (one of the registered ones)\r\n// based on the list of preferred `locales` supplied by the user.\r\n//\r\n// @param {string[]} locales - the list of preferable locales (in [IETF format](https://en.wikipedia.org/wiki/IETF_language_tag)).\r\n// @param {Function} isLocaleDataAvailable - tests if a locale is available.\r\n//\r\n// @returns {string} The most suitable locale\r\n//\r\n// @example\r\n// // Returns 'en'\r\n// chooseLocale(['en-US'], undefined, (locale) => locale === 'ru' || locale === 'en')\r\n//\r\nexport default function chooseLocale(locales, isLocaleDataAvailable)\r\n{\r\n\t// This is not an intelligent algorythm,\r\n\t// but it will do for this library's case.\r\n\t// `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\r\n\tfor (let locale of locales) {\r\n\t\tif (isLocaleDataAvailable(locale)) {\r\n\t\t\treturn locale\r\n\t\t}\r\n\t\tconst parts = locale.split('-')\r\n\t\twhile (parts.length > 1) {\r\n\t\t\tparts.pop()\r\n\t\t\tlocale = parts.join('-')\r\n\t\t\tif (isLocaleDataAvailable(locale)) {\r\n\t\t\t\treturn locale\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthrow new Error(`No locale data has been registered for any of the locales: ${locales.join(', ')}`)\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\r\nexport function intlDateTimeFormatSupportedLocale(locales) {\r\n\t/* istanbul ignore else */\r\n\tif (intlDateTimeFormatSupported()) {\r\n\t\treturn Intl.DateTimeFormat.supportedLocalesOf(locales)[0]\r\n\t}\r\n}\r\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\r\nexport function intlDateTimeFormatSupported() {\r\n\t// Babel transforms `typeof` into some \"branches\"\r\n\t// so istanbul will show this as \"branch not covered\".\r\n\t/* istanbul ignore next */\r\n\tconst isIntlAvailable = typeof Intl === 'object'\r\n\treturn isIntlAvailable && typeof Intl.DateTimeFormat === 'function'\r\n}","import { convenient } from '../gradation'\r\n\r\n// Similar to the default style but with \"ago\" omitted.\r\n//\r\n// just now\r\n// 5 minutes\r\n// 10 minutes\r\n// 15 minutes\r\n// 20 minutes\r\n// an hour\r\n// 2 hours\r\n// …\r\n// 20 hours\r\n// 1 day\r\n// 2 days\r\n// a week\r\n// 2 weeks\r\n// 3 weeks\r\n// a month\r\n// 2 months\r\n// 3 months\r\n// 4 months\r\n// a year\r\n// 2 years\r\n//\r\nexport default\r\n{\r\n\tgradation: convenient,\r\n\tflavour: 'long-time',\r\n\tunits:\r\n\t[\r\n\t\t'now',\r\n\t\t'minute',\r\n\t\t'hour',\r\n\t\t'day',\r\n\t\t'week',\r\n\t\t'month',\r\n\t\t'year'\r\n\t]\r\n}","import { canonical, day, hour, getStep, getDate } from '../gradation'\r\nimport { intlDateTimeFormatSupported } from '../locale'\r\n\r\n// A cache for `Intl.DateTimeFormat` twitter formatters\r\n// for various locales (is a global variable).\r\nconst formatters = {}\r\n\r\n// Twitter style relative time formatting.\r\n// (\"1m\", \"2h\", \"Mar 3\", \"Apr 4, 2012\").\r\n// Seconds, minutes and hours are shown relatively,\r\n// and other intervals can be shown using full date format.\r\nexport default\r\n{\r\n\t// Twitter gradation is derived from \"canonical\" gradation\r\n\t// adjusting its \"minute\" `threshold` to be 45.\r\n\tgradation: [\r\n\t\t// Minutes\r\n\t\t{\r\n\t\t\t...getStep(canonical, 'minute'),\r\n\t\t\tthreshold: 45\r\n\t\t},\r\n\t\t// Hours\r\n\t\tgetStep(canonical, 'hour'),\r\n\t\t// If `date` and `now` happened the same year,\r\n\t\t// then only output month and day.\r\n\t\t{\r\n\t\t\tthreshold: day - 0.5 * hour,\r\n\t\t\tformat(value, locale) {\r\n\t\t\t\t// Whether can use `Intl.DateTimeFormat`.\r\n\t\t\t\t// If `Intl` is not available,\r\n\t\t\t\t// or the locale is not supported,\r\n\t\t\t\t// then don't override the default labels.\r\n\t\t\t\t/* istanbul ignore if */\r\n\t\t\t\tif (!intlDateTimeFormatSupported()) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (!formatters[locale]) {\r\n\t\t\t\t\tformatters[locale] = {}\r\n\t\t\t\t}\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (!formatters[locale].this_year) {\r\n\t\t\t\t\t// \"Apr 11\" (MMMd)\r\n\t\t\t\t\tformatters[locale].this_year = new Intl.DateTimeFormat(locale, {\r\n\t\t\t\t\t\tmonth : 'short',\r\n\t\t\t\t\t\tday   : 'numeric'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t// Output month and day.\r\n\t\t\t\treturn formatters[locale].this_year.format(getDate(value))\r\n\t\t\t}\r\n\t\t},\r\n\t\t// If `date` and `now` happened in defferent years,\r\n\t\t// then output day, month and year.\r\n\t\t{\r\n\t\t\tthreshold(now) {\r\n\t\t\t\t// Jan 1st of the next year.\r\n\t\t\t\tconst nextYear = new Date(new Date(now).getFullYear() + 1, 0)\r\n\t\t\t\treturn (nextYear.getTime() - now) / 1000\r\n\t\t\t},\r\n\t\t\tformat(value, locale) {\r\n\t\t\t\t// Whether can use `Intl.DateTimeFormat`.\r\n\t\t\t\t// If `Intl` is not available,\r\n\t\t\t\t// or the locale is not supported,\r\n\t\t\t\t// then don't override the default labels.\r\n\t\t\t\t/* istanbul ignore if */\r\n\t\t\t\tif (!intlDateTimeFormatSupported()) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t/* istanbul ignore if */\r\n\t\t\t\tif (!formatters[locale]) {\r\n\t\t\t\t\tformatters[locale] = {}\r\n\t\t\t\t}\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (!formatters[locale].other) {\r\n\t\t\t\t\t// \"Apr 11, 2017\" (yMMMd)\r\n\t\t\t\t\tformatters[locale].other = new Intl.DateTimeFormat(locale, {\r\n\t\t\t\t\t\tyear  : 'numeric',\r\n\t\t\t\t\t\tmonth : 'short',\r\n\t\t\t\t\t\tday   : 'numeric'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t// Output day, month and year.\r\n\t\t\t\treturn formatters[locale].other.format(getDate(value))\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tflavour: [\r\n\t\t'tiny',\r\n\t\t'short-time',\r\n\t\t'narrow',\r\n\t\t'short'\r\n\t]\r\n}\r\n","import { convenient } from '../gradation'\r\n\r\nexport default\r\n{\r\n\tgradation: convenient,\r\n\tflavour: ['long-convenient', 'long'],\r\n\tunits:\r\n\t[\r\n\t\t'now',\r\n\t\t'minute',\r\n\t\t'hour',\r\n\t\t'day',\r\n\t\t'week',\r\n\t\t'month',\r\n\t\t'year'\r\n\t]\r\n}","// A preset (style) is an object having shape\r\n// `{ units, gradation, flavour, custom({ elapsed, time, date, now, locale }) }`.\r\n//\r\n// `date` parameter of `custom()` is not guaranteed to be set (can be inferred from `time`).\r\n//\r\nexport { default as timeStyle } from './time'\r\nexport { default as twitterStyle } from './twitter'\r\nexport { default as defaultStyle } from './default'","import RelativeTimeFormat from 'relative-time-format'\r\n\r\nimport Cache from './cache'\r\nimport grade from './grade'\r\nimport chooseLocale from './locale'\r\nimport { twitterStyle, timeStyle, defaultStyle } from './style'\r\n\r\nimport {\r\n\taddLocaleData,\r\n\tgetLocaleData\r\n} from './LocaleDataStore'\r\n\r\n// const EXTRA_STYLES = [\r\n// \t'long-convenient',\r\n// \t'long-time',\r\n// \t'short-convenient',\r\n// \t'short-time',\r\n// \t'tiny'\r\n// ]\r\n\r\n// Valid time units.\r\nconst UNITS = [\r\n\t'now',\r\n\t// The rest are the same as in `Intl.RelativeTimeFormat`.\r\n\t'second',\r\n\t'minute',\r\n\t'hour',\r\n\t'day',\r\n\t'week',\r\n\t'month',\r\n\t'quarter',\r\n\t'year'\r\n]\r\n\r\nexport default class JavascriptTimeAgo\r\n{\r\n\t/**\r\n\t * @param {(string|string[])} locales=[] - Preferred locales (or locale).\r\n\t */\r\n\tconstructor(locales = [])\r\n\t{\r\n\t\t// Convert `locales` to an array.\r\n\t\tif (typeof locales === 'string') {\r\n\t\t\tlocales = [locales]\r\n\t\t}\r\n\r\n\t\t// Choose the most appropriate locale\r\n\t\t// (one of the previously added ones)\r\n\t\t// based on the list of preferred `locales` supplied by the user.\r\n\t\tthis.locale = chooseLocale(\r\n\t\t\tlocales.concat(RelativeTimeFormat.getDefaultLocale()),\r\n\t\t\tgetLocaleData\r\n\t\t)\r\n\r\n\t\t// Use `Intl.NumberFormat` for formatting numbers (when available).\r\n\t\tif (typeof Intl !== 'undefined' && Intl.NumberFormat) {\r\n\t\t\tthis.numberFormat = new Intl.NumberFormat(this.locale)\r\n\t\t}\r\n\r\n\t\t// Cache `Intl.RelativeTimeFormat` instance.\r\n\t\tthis.relativeTimeFormatCache = new Cache()\r\n\t}\r\n\r\n\t// Formats the relative date/time.\r\n\t//\r\n\t// @return {string} Returns the formatted relative date/time.\r\n\t//\r\n\t// @param {(Object|string)} [style] - Relative date/time formatting style.\r\n\t//\r\n\t// @param {string[]} [style.units] - A list of allowed time units\r\n\t//                                  (e.g. ['second', 'minute', 'hour', …])\r\n\t//\r\n\t// @param {Function} [style.custom] - `function ({ elapsed, time, date, now })`.\r\n\t//                                    If this function returns a value, then\r\n\t//                                    the `.format()` call will return that value.\r\n\t//                                    Otherwise it has no effect.\r\n\t//\r\n\t// @param {string} [style.flavour] - e.g. \"long\", \"short\", \"tiny\", etc.\r\n\t//\r\n\t// @param {Object[]} [style.gradation] - Time scale gradation steps.\r\n\t//\r\n\t// @param {string} style.gradation[].unit - Time interval measurement unit.\r\n\t//                                          (e.g. ['second', 'minute', 'hour', …])\r\n\t//\r\n\t// @param {Number} style.gradation[].factor - Time interval measurement unit factor.\r\n\t//                                            (e.g. `60` for 'minute')\r\n\t//\r\n\t// @param {Number} [style.gradation[].granularity] - A step for the unit's \"amount\" value.\r\n\t//                                                   (e.g. `5` for '0 minutes', '5 minutes', etc)\r\n\t//\r\n\t// @param {Number} [style.gradation[].threshold] - Time interval measurement unit threshold.\r\n\t//                                                 (e.g. `45` seconds for 'minute').\r\n\t//                                                 There can also be specific `threshold_[unit]`\r\n\t//                                                 thresholds for fine-tuning.\r\n\t//\r\n\tformat(input, style = defaultStyle)\r\n\t{\r\n\t\tif (typeof style === 'string')\r\n\t\t{\r\n\t\t\tswitch (style)\r\n\t\t\t{\r\n\t\t\t\tcase 'twitter':\r\n\t\t\t\t\tstyle = twitterStyle\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'time':\r\n\t\t\t\t\tstyle = timeStyle\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tstyle = defaultStyle\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst { date, time } = getDateAndTimeBeingFormatted(input)\r\n\r\n\t\t// Get locale messages for this formatting flavour\r\n\t\tconst { flavour, localeData } = this.getLocaleData(style.flavour)\r\n\r\n\t\t// Can pass a custom `now`, e.g. for testing purposes.\r\n\t\t// Technically it doesn't belong to `style`\r\n\t\t// but since this is an undocumented internal feature,\r\n\t\t// taking it from the `style` argument will do (for now).\r\n\t\tconst now = style.now || Date.now()\r\n\r\n\t\t// how much time elapsed (in seconds)\r\n\t\tconst elapsed = (now - time) / 1000 // in seconds\r\n\r\n\t\t// `custom` – A function of `{ elapsed, time, date, now, locale }`.\r\n\t\t// If this function returns a value, then the `.format()` call will return that value.\r\n\t\t// Otherwise the relative date/time is formatted as usual.\r\n\t\t// This feature is currently not used anywhere and is here\r\n\t\t// just for providing the ultimate customization point\r\n\t\t// in case anyone would ever need that. Prefer using\r\n\t\t// `gradation[step].format(value, locale)` instead.\r\n\t\t//\r\n\t\t// I guess `custom` is deprecated and will be removed\r\n\t\t// in some future major version release.\r\n\t\t//\r\n\t\tif (style.custom)\r\n\t\t{\r\n\t\t\tconst custom = style.custom({\r\n\t\t\t\tnow,\r\n\t\t\t\tdate,\r\n\t\t\t\ttime,\r\n\t\t\t\telapsed,\r\n\t\t\t\tlocale : this.locale\r\n\t\t\t})\r\n\r\n\t\t\tif (custom !== undefined) {\r\n\t\t\t\treturn custom\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Available time interval measurement units.\r\n\t\tconst units = getTimeIntervalMeasurementUnits(localeData, style.units)\r\n\t\t// If no available time unit is suitable, just output an empty string.\r\n\t\tif (units.length === 0) {\r\n\t\t\tconsole.error(`Units \"${units.join(', ')}\" were not found in locale data for \"${this.locale}\".`)\r\n\t\t\treturn ''\r\n\t\t}\r\n\r\n\t\t// Choose the appropriate time measurement unit\r\n\t\t// and get the corresponding rounded time amount.\r\n\t\tconst step = grade(\r\n\t\t\tMath.abs(elapsed),\r\n\t\t\tnow,\r\n\t\t\tunits,\r\n\t\t\tstyle.gradation\r\n\t\t)\r\n\r\n\t\t// If no time unit is suitable, just output an empty string.\r\n\t\t// E.g. when \"now\" unit is not available\r\n\t\t// and \"second\" has a threshold of `0.5`\r\n\t\t// (e.g. the \"canonical\" grading scale).\r\n\t\tif (!step) {\r\n\t\t\treturn ''\r\n\t\t}\r\n\r\n\t\tif (step.format) {\r\n\t\t\treturn step.format(date || time, this.locale)\r\n\t\t}\r\n\r\n\t\tconst { unit, factor, granularity } = step\r\n\r\n\t\tlet amount = Math.abs(elapsed) / factor\r\n\r\n\t\t// Apply granularity to the time amount\r\n\t\t// (and fallback to the previous step\r\n\t\t//  if the first level of granularity\r\n\t\t//  isn't met by this amount)\r\n\t\tif (granularity) {\r\n\t\t\t// Recalculate the elapsed time amount based on granularity\r\n\t\t\tamount = Math.round(amount / granularity) * granularity\r\n\t\t}\r\n\r\n\t\t// `Intl.RelativeTimeFormat` doesn't operate in \"now\" units.\r\n\t\tif (unit === 'now') {\r\n\t\t\treturn getNowMessage(localeData, -1 * Math.sign(elapsed))\r\n\t\t}\r\n\r\n\t\tswitch (flavour) {\r\n\t\t\tcase 'long':\r\n\t\t\tcase 'short':\r\n\t\t\tcase 'narrow':\r\n\t\t\t\t// Format `value` using `Intl.RelativeTimeFormat`.\r\n\t\t\t\treturn this.getFormatter(flavour).format(-1 * Math.sign(elapsed) * Math.round(amount), unit)\r\n\t\t\tdefault:\r\n\t\t\t\t// Format `value`.\r\n\t\t\t\t// (mimicks `Intl.RelativeTimeFormat` with the addition of extra styles)\r\n\t\t\t\treturn this.formatValue(-1 * Math.sign(elapsed) * Math.round(amount), unit, localeData)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Mimicks what `Intl.RelativeTimeFormat` does for additional locale styles.\r\n\t * @param  {number} value\r\n\t * @param  {string} unit\r\n\t * @param  {object} localeData — Relative time messages for the flavor.\r\n\t * @return {string}\r\n\t */\r\n\tformatValue(value, unit, localeData) {\r\n\t\treturn this.getRule(value, unit, localeData).replace('{0}', this.formatNumber(Math.abs(value)))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns formatting rule for `value` in `units` (either in past or in future).\r\n\t * @param {number} value - Time interval value.\r\n\t * @param {string} unit - Time interval measurement unit.\r\n\t * @param  {object} localeData — Relative time messages for the flavor.\r\n\t * @return {string}\r\n\t * @example\r\n\t * // Returns \"{0} days ago\"\r\n\t * getRule(-2, \"day\")\r\n\t */\r\n\tgetRule(value, unit, localeData) {\r\n\t\tconst unitRules = localeData[unit]\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof unitRules === 'string') {\r\n\t\t\treturn unitRules\r\n\t\t}\r\n\t\t// Choose either \"past\" or \"future\" based on time `value` sign.\r\n\t\t// If \"past\" is same as \"future\" then they're stored as \"other\".\r\n\t\t// If there's only \"other\" then it's being collapsed.\r\n\t\tconst quantifierRules = unitRules[value <= 0 ? 'past' : 'future'] || unitRules\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof quantifierRules === 'string') {\r\n\t\t\treturn quantifierRules\r\n\t\t}\r\n\t\t// Quantify `value`.\r\n\t\tconst quantify = getLocaleData(this.locale).quantify\r\n\t\tlet quantifier = quantify && quantify(Math.abs(value))\r\n\t\t// There seems to be no such locale in CLDR\r\n\t\t// for which `quantify` is missing\r\n\t\t// and still `past` and `future` messages\r\n\t\t// contain something other than \"other\".\r\n\t\t/* istanbul ignore next */\r\n\t\tquantifier = quantifier || 'other'\r\n\t\t// \"other\" rule is supposed to always be present.\r\n\t\t// If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n\t\treturn quantifierRules[quantifier] || quantifierRules.other\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a number into a string.\r\n\t * Uses `Intl.NumberFormat` when available.\r\n\t * @param  {number} number\r\n\t * @return {string}\r\n\t */\r\n\tformatNumber(number) {\r\n\t\treturn this.numberFormat ? this.numberFormat.format(number) : String(number)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `Intl.RelativeTimeFormat` for a given `flavor`.\r\n\t * @param {string} flavor\r\n\t * @return {object} `Intl.RelativeTimeFormat` instance\r\n\t */\r\n\tgetFormatter(flavor) {\r\n\t\t// `Intl.RelativeTimeFormat` instance creation is assumed a\r\n\t\t// lengthy operation so the instances are cached and reused.\r\n\t\treturn this.relativeTimeFormatCache.get(this.locale, flavor) ||\r\n\t\t\tthis.relativeTimeFormatCache.put(this.locale, flavor, new RelativeTimeFormat(this.locale, { style: flavor }))\r\n\t}\r\n\r\n\t/**\r\n\t * Gets locale messages for this formatting flavour\r\n\t *\r\n\t * @param {(string|string[])} flavour - Relative date/time formatting flavour.\r\n\t *                                      If it's an array then all flavours are tried in order.\r\n\t *\r\n\t * @returns {Object} Returns an object of shape { flavour, localeData }\r\n\t */\r\n\tgetLocaleData(flavour = []) {\r\n\t\t// Get relative time formatting rules for this locale\r\n\t\tconst localeData = getLocaleData(this.locale)\r\n\r\n\t\t// Convert `flavour` to an array.\r\n\t\tif (typeof flavour === 'string') {\r\n\t\t\tflavour = [flavour]\r\n\t\t}\r\n\r\n\t\t// \"long\" flavour is the default one.\r\n\t\t// (it's always present)\r\n\t\tflavour = flavour.concat('long')\r\n\r\n\t\t// Find a suitable flavour.\r\n\t\tfor (const _ of flavour) {\r\n\t\t\tif (localeData[_]) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tflavour : _,\r\n\t\t\t\t\tlocaleData : localeData[_]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Can't happen - \"long\" flavour is always present.\r\n\t\t// throw new Error(`None of the flavours - ${flavour.join(', ')} - was found for locale \"${this.locale}\".`)\r\n\t}\r\n}\r\n\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\nJavascriptTimeAgo.getDefaultLocale = RelativeTimeFormat.getDefaultLocale\r\n\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\nJavascriptTimeAgo.setDefaultLocale = RelativeTimeFormat.setDefaultLocale\r\n\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\nJavascriptTimeAgo.addLocale = function(localeData) {\r\n\taddLocaleData(localeData)\r\n\tRelativeTimeFormat.addLocale(localeData)\r\n}\r\n\r\n/**\r\n * (legacy alias)\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n * @deprecated\r\n */\r\nJavascriptTimeAgo.locale = JavascriptTimeAgo.addLocale\r\n\r\n// Normalizes `.format()` `time` argument.\r\nfunction getDateAndTimeBeingFormatted(input)\r\n{\r\n\tif (input.constructor === Date)\r\n\t{\r\n\t\treturn {\r\n\t\t\tdate : input,\r\n\t\t\ttime : input.getTime()\r\n\t\t}\r\n\t}\r\n\r\n\tif (typeof input === 'number')\r\n\t{\r\n\t\treturn {\r\n\t\t\ttime : input,\r\n\t\t\t// `date` is not required for formatting\r\n\t\t\t// relative times unless \"twitter\" preset is used.\r\n\t\t\t// date : new Date(input)\r\n\t\t}\r\n\t}\r\n\r\n\t// For some weird reason istanbul doesn't see this `throw` covered.\r\n\t/* istanbul ignore next */\r\n\tthrow new Error(`Unsupported relative time formatter input: ${typeof input}, ${input}`)\r\n}\r\n\r\n// Get available time interval measurement units.\r\nfunction getTimeIntervalMeasurementUnits(localeData, restrictedSetOfUnits)\r\n{\r\n\t// All available time interval measurement units.\r\n\tlet units = Object.keys(localeData)\r\n\r\n\t// If only a specific set of available\r\n\t// time measurement units can be used.\r\n\tif (restrictedSetOfUnits) {\r\n\t\t// Reduce available time interval measurement units\r\n\t\t// based on user's preferences.\r\n\t\tunits = restrictedSetOfUnits.filter(_ => units.indexOf(_) >= 0)\r\n\t}\r\n\r\n\t// Stock `Intl.RelativeTimeFormat` locale data doesn't have \"now\" units.\r\n\t// So either \"now\" is present in extended locale data\r\n\t// or it's taken from \".second.current\".\r\n\tif ((!restrictedSetOfUnits || restrictedSetOfUnits.indexOf('now') >= 0) &&\r\n\t\tunits.indexOf('now') < 0) {\r\n\t\tif (localeData.second.current) {\r\n\t\t\tunits.unshift('now')\r\n\t\t}\r\n\t}\r\n\r\n\treturn units\r\n}\r\n\r\nfunction getNowMessage(localeData, value) {\r\n\t// Specific \"now\" message form extended locale data (if present).\r\n\tif (localeData.now) {\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof localeData.now === 'string') {\r\n\t\t\treturn localeData.now\r\n\t\t}\r\n\t\t// Not handling `value === 0` as `localeData.now.current` here\r\n\t\t// because it wouldn't make sense: \"now\" is a moment,\r\n\t\t// so one can't possibly differentiate between a\r\n\t\t// \"previous\" moment, a \"current\" moment and a \"next moment\".\r\n\t\t// It can only be differentiated between \"past\" and \"future\".\r\n\t\tif (value <= 0) {\r\n\t\t\treturn localeData.now.past\r\n\t\t} else {\r\n\t\t\treturn localeData.now.future\r\n\t\t}\r\n\t}\r\n\t// Use \".second.current\" as \"now\" message.\r\n\treturn localeData.second.current\r\n\t// If this function was called then\r\n\t// it means that either \"now\" unit messages are\r\n\t// available or \".second.current\" message is present.\r\n}","export { default } from './modules/JavascriptTimeAgo'\r\n\r\nexport {\r\n\tintlDateTimeFormatSupported as intlDateTimeFormatSupported,\r\n\tintlDateTimeFormatSupportedLocale as intlDateTimeFormatSupportedLocale\r\n} from './modules/locale'","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","module.exports = {\n\t\"year\": {\n\t\t\"previous\": \"last year\",\n\t\t\"current\": \"this year\",\n\t\t\"next\": \"next year\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} year ago\",\n\t\t\t\"other\": \"{0} years ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} year\",\n\t\t\t\"other\": \"in {0} years\"\n\t\t}\n\t},\n\t\"quarter\": {\n\t\t\"previous\": \"last quarter\",\n\t\t\"current\": \"this quarter\",\n\t\t\"next\": \"next quarter\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} quarter ago\",\n\t\t\t\"other\": \"{0} quarters ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} quarter\",\n\t\t\t\"other\": \"in {0} quarters\"\n\t\t}\n\t},\n\t\"month\": {\n\t\t\"previous\": \"last month\",\n\t\t\"current\": \"this month\",\n\t\t\"next\": \"next month\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} month ago\",\n\t\t\t\"other\": \"{0} months ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} month\",\n\t\t\t\"other\": \"in {0} months\"\n\t\t}\n\t},\n\t\"week\": {\n\t\t\"previous\": \"last week\",\n\t\t\"current\": \"this week\",\n\t\t\"next\": \"next week\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} week ago\",\n\t\t\t\"other\": \"{0} weeks ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} week\",\n\t\t\t\"other\": \"in {0} weeks\"\n\t\t}\n\t},\n\t\"day\": {\n\t\t\"previous\": \"yesterday\",\n\t\t\"current\": \"today\",\n\t\t\"next\": \"tomorrow\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} day ago\",\n\t\t\t\"other\": \"{0} days ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} day\",\n\t\t\t\"other\": \"in {0} days\"\n\t\t}\n\t},\n\t\"hour\": {\n\t\t\"current\": \"this hour\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} hour ago\",\n\t\t\t\"other\": \"{0} hours ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} hour\",\n\t\t\t\"other\": \"in {0} hours\"\n\t\t}\n\t},\n\t\"minute\": {\n\t\t\"current\": \"this minute\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} minute ago\",\n\t\t\t\"other\": \"{0} minutes ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} minute\",\n\t\t\t\"other\": \"in {0} minutes\"\n\t\t}\n\t},\n\t\"second\": {\n\t\t\"current\": \"now\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} second ago\",\n\t\t\t\"other\": \"{0} seconds ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} second\",\n\t\t\t\"other\": \"in {0} seconds\"\n\t\t}\n\t}\n};","module.exports = {\n\t\"year\": {\n\t\t\"previous\": \"last yr.\",\n\t\t\"current\": \"this yr.\",\n\t\t\"next\": \"next yr.\",\n\t\t\"past\": \"{0} yr. ago\",\n\t\t\"future\": \"in {0} yr.\"\n\t},\n\t\"quarter\": {\n\t\t\"previous\": \"last qtr.\",\n\t\t\"current\": \"this qtr.\",\n\t\t\"next\": \"next qtr.\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} qtr. ago\",\n\t\t\t\"other\": \"{0} qtrs. ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} qtr.\",\n\t\t\t\"other\": \"in {0} qtrs.\"\n\t\t}\n\t},\n\t\"month\": {\n\t\t\"previous\": \"last mo.\",\n\t\t\"current\": \"this mo.\",\n\t\t\"next\": \"next mo.\",\n\t\t\"past\": \"{0} mo. ago\",\n\t\t\"future\": \"in {0} mo.\"\n\t},\n\t\"week\": {\n\t\t\"previous\": \"last wk.\",\n\t\t\"current\": \"this wk.\",\n\t\t\"next\": \"next wk.\",\n\t\t\"past\": \"{0} wk. ago\",\n\t\t\"future\": \"in {0} wk.\"\n\t},\n\t\"day\": {\n\t\t\"previous\": \"yesterday\",\n\t\t\"current\": \"today\",\n\t\t\"next\": \"tomorrow\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} day ago\",\n\t\t\t\"other\": \"{0} days ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} day\",\n\t\t\t\"other\": \"in {0} days\"\n\t\t}\n\t},\n\t\"hour\": {\n\t\t\"current\": \"this hour\",\n\t\t\"past\": \"{0} hr. ago\",\n\t\t\"future\": \"in {0} hr.\"\n\t},\n\t\"minute\": {\n\t\t\"current\": \"this minute\",\n\t\t\"past\": \"{0} min. ago\",\n\t\t\"future\": \"in {0} min.\"\n\t},\n\t\"second\": {\n\t\t\"current\": \"now\",\n\t\t\"past\": \"{0} sec. ago\",\n\t\t\"future\": \"in {0} sec.\"\n\t}\n};","module.exports = {\n\t\"year\": {\n\t\t\"previous\": \"last yr.\",\n\t\t\"current\": \"this yr.\",\n\t\t\"next\": \"next yr.\",\n\t\t\"past\": \"{0} yr. ago\",\n\t\t\"future\": \"in {0} yr.\"\n\t},\n\t\"quarter\": {\n\t\t\"previous\": \"last qtr.\",\n\t\t\"current\": \"this qtr.\",\n\t\t\"next\": \"next qtr.\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} qtr. ago\",\n\t\t\t\"other\": \"{0} qtrs. ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} qtr.\",\n\t\t\t\"other\": \"in {0} qtrs.\"\n\t\t}\n\t},\n\t\"month\": {\n\t\t\"previous\": \"last mo.\",\n\t\t\"current\": \"this mo.\",\n\t\t\"next\": \"next mo.\",\n\t\t\"past\": \"{0} mo. ago\",\n\t\t\"future\": \"in {0} mo.\"\n\t},\n\t\"week\": {\n\t\t\"previous\": \"last wk.\",\n\t\t\"current\": \"this wk.\",\n\t\t\"next\": \"next wk.\",\n\t\t\"past\": \"{0} wk. ago\",\n\t\t\"future\": \"in {0} wk.\"\n\t},\n\t\"day\": {\n\t\t\"previous\": \"yesterday\",\n\t\t\"current\": \"today\",\n\t\t\"next\": \"tomorrow\",\n\t\t\"past\": {\n\t\t\t\"one\": \"{0} day ago\",\n\t\t\t\"other\": \"{0} days ago\"\n\t\t},\n\t\t\"future\": {\n\t\t\t\"one\": \"in {0} day\",\n\t\t\t\"other\": \"in {0} days\"\n\t\t}\n\t},\n\t\"hour\": {\n\t\t\"current\": \"this hour\",\n\t\t\"past\": \"{0} hr. ago\",\n\t\t\"future\": \"in {0} hr.\"\n\t},\n\t\"minute\": {\n\t\t\"current\": \"this minute\",\n\t\t\"past\": \"{0} min. ago\",\n\t\t\"future\": \"in {0} min.\"\n\t},\n\t\"second\": {\n\t\t\"current\": \"now\",\n\t\t\"past\": \"{0} sec. ago\",\n\t\t\"future\": \"in {0} sec.\"\n\t}\n};","module.exports=function(n){var r=!String(n).split(\".\")[1];return 1==n&&r?\"one\":\"other\"}","module.exports = {\n\tlocale: 'en',\n\tlong: require('./long.json'),\n\tshort: require('./short.json'),\n\tnarrow: require('./narrow.json'),\n\tquantify: require('./quantify')\n}","module.exports =  {\r\n\t\"year\": \"{0} yr.\",\r\n\t\"month\": \"{0} mo.\",\r\n\t\"week\": \"{0} wk.\",\r\n\t\"day\": {\r\n\t\t\"one\": \"{0} day\",\r\n\t\t\"other\": \"{0} days\"\r\n\t},\r\n\t\"hour\": \"{0} hr.\",\r\n\t\"minute\": \"{0} min.\",\r\n\t\"second\": \"{0} sec.\",\r\n\t\"now\": \"now\"\r\n};","module.exports = {\r\n\t\"year\": {\r\n\t\t\"previous\": \"last yr.\",\r\n\t\t\"current\": \"this yr.\",\r\n\t\t\"next\": \"next yr.\",\r\n\t\t\"past\": \"{0} yr. ago\",\r\n\t\t\"future\": \"in {0} yr.\"\r\n\t},\r\n\t\"quarter\": {\r\n\t\t\"previous\": \"last qtr.\",\r\n\t\t\"current\": \"this qtr.\",\r\n\t\t\"next\": \"next qtr.\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"{0} qtr. ago\",\r\n\t\t\t\"other\": \"{0} qtrs. ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in {0} qtr.\",\r\n\t\t\t\"other\": \"in {0} qtrs.\"\r\n\t\t}\r\n\t},\r\n\t\"month\": {\r\n\t\t\"previous\": \"last mo.\",\r\n\t\t\"current\": \"this mo.\",\r\n\t\t\"next\": \"next mo.\",\r\n\t\t\"past\": \"{0} mo. ago\",\r\n\t\t\"future\": \"in {0} mo.\"\r\n\t},\r\n\t\"week\": {\r\n\t\t\"previous\": \"last wk.\",\r\n\t\t\"current\": \"this wk.\",\r\n\t\t\"next\": \"next wk.\",\r\n\t\t\"past\": \"{0} wk. ago\",\r\n\t\t\"future\": \"in {0} wk.\"\r\n\t},\r\n\t\"day\": {\r\n\t\t\"previous\": \"yesterday\",\r\n\t\t\"current\": \"today\",\r\n\t\t\"next\": \"tomorrow\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"{0} day ago\",\r\n\t\t\t\"other\": \"{0} days ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in {0} day\",\r\n\t\t\t\"other\": \"in {0} days\"\r\n\t\t}\r\n\t},\r\n\t\"hour\": {\r\n\t\t\"current\": \"this hour\",\r\n\t\t\"past\": \"{0} hr. ago\",\r\n\t\t\"future\": \"in {0} hr.\"\r\n\t},\r\n\t\"minute\": {\r\n\t\t\"current\": \"this minute\",\r\n\t\t\"past\": \"{0} min. ago\",\r\n\t\t\"future\": \"in {0} min.\"\r\n\t},\r\n\t\"second\": {\r\n\t\t\"current\": \"now\",\r\n\t\t\"past\": \"{0} sec. ago\",\r\n\t\t\"future\": \"in {0} sec.\"\r\n\t},\r\n\t\"now\": {\r\n\t\t\"future\": \"in a moment\",\r\n\t\t\"past\": \"just now\"\r\n\t}\r\n};","module.exports = {\r\n\t\"year\": {\r\n\t\t\"one\": \"{0} year\",\r\n\t\t\"other\": \"{0} years\"\r\n\t},\r\n\t\"month\": {\r\n\t\t\"one\": \"{0} month\",\r\n\t\t\"other\": \"{0} months\"\r\n\t},\r\n\t\"week\": {\r\n\t\t\"one\": \"{0} week\",\r\n\t\t\"other\": \"{0} weeks\"\r\n\t},\r\n\t\"day\": {\r\n\t\t\"one\": \"{0} day\",\r\n\t\t\"other\": \"{0} days\"\r\n\t},\r\n\t\"hour\": {\r\n\t\t\"one\": \"{0} hour\",\r\n\t\t\"other\": \"{0} hours\"\r\n\t},\r\n\t\"minute\": {\r\n\t\t\"one\": \"{0} minute\",\r\n\t\t\"other\": \"{0} minutes\"\r\n\t},\r\n\t\"second\": {\r\n\t\t\"one\": \"{0} second\",\r\n\t\t\"other\": \"{0} seconds\"\r\n\t},\r\n\t\"now\": {\r\n\t\t\"future\": \"in a moment\",\r\n\t\t\"past\": \"just now\"\r\n\t}\r\n};","module.exports = {\r\n\t\"year\": {\r\n\t\t\"previous\": \"last year\",\r\n\t\t\"current\": \"this year\",\r\n\t\t\"next\": \"next year\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"a year ago\",\r\n\t\t\t\"other\": \"{0} years ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in a year\",\r\n\t\t\t\"other\": \"in {0} years\"\r\n\t\t}\r\n\t},\r\n\t\"quarter\": {\r\n\t\t\"previous\": \"last quarter\",\r\n\t\t\"current\": \"this quarter\",\r\n\t\t\"next\": \"next quarter\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"a quarter ago\",\r\n\t\t\t\"other\": \"{0} quarters ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in a quarter\",\r\n\t\t\t\"other\": \"in {0} quarters\"\r\n\t\t}\r\n\t},\r\n\t\"month\": {\r\n\t\t\"previous\": \"last month\",\r\n\t\t\"current\": \"this month\",\r\n\t\t\"next\": \"next month\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"a month ago\",\r\n\t\t\t\"other\": \"{0} months ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in a month\",\r\n\t\t\t\"other\": \"in {0} months\"\r\n\t\t}\r\n\t},\r\n\t\"week\": {\r\n\t\t\"previous\": \"last week\",\r\n\t\t\"current\": \"this week\",\r\n\t\t\"next\": \"next week\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"a week ago\",\r\n\t\t\t\"other\": \"{0} weeks ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in a week\",\r\n\t\t\t\"other\": \"in {0} weeks\"\r\n\t\t}\r\n\t},\r\n\t\"day\": {\r\n\t\t\"previous\": \"yesterday\",\r\n\t\t\"current\": \"today\",\r\n\t\t\"next\": \"tomorrow\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"a day ago\",\r\n\t\t\t\"other\": \"{0} days ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in a day\",\r\n\t\t\t\"other\": \"in {0} days\"\r\n\t\t}\r\n\t},\r\n\t\"hour\": {\r\n\t\t\"current\": \"this hour\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"an hour ago\",\r\n\t\t\t\"other\": \"{0} hours ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in an hour\",\r\n\t\t\t\"other\": \"in {0} hours\"\r\n\t\t}\r\n\t},\r\n\t\"minute\": {\r\n\t\t\"current\": \"this minute\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"a minute ago\",\r\n\t\t\t\"other\": \"{0} minutes ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in a minute\",\r\n\t\t\t\"other\": \"in {0} minutes\"\r\n\t\t}\r\n\t},\r\n\t\"second\": {\r\n\t\t\"current\": \"now\",\r\n\t\t\"past\": {\r\n\t\t\t\"one\": \"a second ago\",\r\n\t\t\t\"other\": \"{0} seconds ago\"\r\n\t\t},\r\n\t\t\"future\": {\r\n\t\t\t\"one\": \"in a second\",\r\n\t\t\t\"other\": \"in {0} seconds\"\r\n\t\t}\r\n\t},\r\n\t\"now\": {\r\n\t\t\"future\": \"in a moment\",\r\n\t\t\"past\": \"just now\"\r\n\t}\r\n};","module.exports = {\r\n\t\"year\": \"{0}yr\",\r\n\t\"month\": \"{0}mo\",\r\n\t\"week\": \"{0}wk\",\r\n\t\"day\": \"{0}d\",\r\n\t\"hour\": \"{0}h\",\r\n\t\"minute\": \"{0}m\",\r\n\t\"second\": \"{0}s\",\r\n\t\"now\": \"now\"\r\n};","var locale = require('relative-time-format/locale/en')\n\nmodule.exports = {\n\tlocale: locale.locale,\n\t// Standard styles.\n\tlong: locale.long,\n\tshort: locale.short,\n\tnarrow: locale.narrow,\n\t// Additional styles.\n\t'short-time': require('../../locale-more-styles/en/short-time.json'),\n\t'short-convenient': require('../../locale-more-styles/en/short-convenient.json'),\n\t'long-time': require('../../locale-more-styles/en/long-time.json'),\n\t'long-convenient': require('../../locale-more-styles/en/long-convenient.json'),\n\t'tiny': require('../../locale-more-styles/en/tiny.json'),\n\t// Quantifier.\n\tquantify: locale.quantify\n}","import reddit from './redditApi';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport numeral from 'numeral';\r\n \r\n// Load locale-specific relative date/time formatting rules.\r\nimport en from 'javascript-time-ago/locale/en'\r\n \r\n// Add locale-specific relative date/time formatting rules.\r\nTimeAgo.addLocale(en)\r\n\r\nconst searchForm = document.getElementById('search-form');\r\nconst searchInput = document.getElementById('search-input');\r\n\r\nsearchForm.addEventListener('submit', e =>{\r\n    // Get search term\r\n    const searchTerm = searchInput.value;\r\n    //Get sort\r\n    // const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n    // console.log(sortBy)\r\n    if(searchTerm === ''){\r\n        showMessage('Please add a search term');\r\n    }\r\n    e.preventDefault();\r\n\r\n//Clear input\r\nsearchInput.value='';\r\n\r\n//Search Reddit\r\nreddit.search(searchTerm)\r\n.then(results => {\r\n    console.log(results);\r\n    let output = '<div class=\"result\">';\r\n    results.forEach(post => {\r\n        const ts = new Date(post.created);\r\n        const timeAgo = new TimeAgo('en-US');\r\n        const date = timeAgo.format(Date.now() - ts ) ;\r\n        const follow = numeral(post.subreddit_subscribers).format('0a');     \r\n        const image = post.preview ? post.preview.images[0].source.url : \"https://secure.webtoolhub.com/static/resources/icons/set26/1bc50a8d1fed.png\";\r\n        output += `\r\n        <div class=\"card\">\r\n        <div class=\"card-body\">\r\n        <img src=\"${image}\" class=\"img\" alt=\"...\">\r\n          <div class='content'>\r\n          <p class=\"card-text\" id='header'>${truncateText(post.title, 80)}</p>\r\n          <p class=\"card-text\" id='p'>submitted ${date} by <a href = \"\"> ${post.author_fullname}</a></p>\r\n          <div class=\"comment-subscribe\">\r\n          <button type=\"button\" class=\"btn btn-light\">${post.num_comments} comments</button>\r\n          <button type=\"button\" class=\"btn btn-light\">${follow} subscribers</button>\r\n          </div>\r\n                    \r\n          </div>\r\n          <p id='domain'>\r\n          <button type=\"button\" class=\"btn btn-light\">Readit</button>\r\n           </p>\r\n        </div>\r\n      </div>\r\n        `\r\n    })\r\n    output += '</div>';\r\n    document.getElementById('results').innerHTML = output;\r\n});\r\n\r\n})\r\n\r\n//show message\r\nfunction showMessage(message, className){\r\nconst div = document.createElement('div');\r\ndiv.className=`\r\nalert ${className}\r\n`;\r\ndiv.appendChild(document.createTextNode(message));\r\n\r\nconst searchContainer = document.getElementById('search-container');\r\n\r\nconst search = document.getElementById('search');\r\n\r\nsearchContainer.insertBefore(div, search);\r\n\r\nsetTimeout(() => document.querySelector('.alert').remove(), 3000)\r\n\r\n}\r\n\r\n\r\nfunction truncateText(text, limit) {\r\n    const shortened = text.indexOf(' ', limit);\r\n    if(shortened === -1) return text;\r\n    return text.substring(0, shortened);\r\n}"]}